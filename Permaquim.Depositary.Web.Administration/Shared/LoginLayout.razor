@inherits LayoutComponentBase

@using Radzen
@using Radzen.Blazor
@using Microsoft.AspNetCore.Identity;
@using Permaquim.Depositary.Web.Administration.Controllers;

<RadzenNotification />

@try
{
    @if (licenciaValida && !licenciaExpirada)
    {
        <RadzenBody @ref="body0">
            <ChildContent>

                <RadzenImage Path="images/fondoLogin.gif" style="bottom: 0; height: 100%; left: 0; position: absolute; right: 0; top: 0; width: 100%">
                </RadzenImage>
                <div class="row justify-content-center align-items-center" style="bottom: 0; left: 0; margin-left: 0; margin-right: 0; position: absolute; right: 0; top: 0">
                    <div class="col-xl-3 col-lg-3 col-md-5 col-sm-8" style="padding-left: 0; padding-right: 0">
                        <RadzenCard style="margin-top: 0">
                            <ChildContent>
                                <RadzenImage Path="@EstiloController.ObtenerItemEstilo(dataEsquemaDetalle,"LogoLoginWeb")" style="display: block; width: 100%">
                                </RadzenImage>
                                <RadzenContentContainer Name="main">
                                    @Body
                                </RadzenContentContainer>
                            </ChildContent>
                        </RadzenCard>
                    </div>
                </div>
            </ChildContent>
        </RadzenBody>
    }
    else
    {
        <Permaquim.Depositary.Web.Administration.Components.RequerimientoLicencia ReferenciaPagina="login" LicenciaValida="@licenciaValida" LicenciaExpirada="@licenciaExpirada"></Permaquim.Depositary.Web.Administration.Components.RequerimientoLicencia>
    }
}
catch (Exception ex)
{
    AuditController.Log(ex);
    <p>@ex.Message</p>
}

@code
{
    private List<Depositary.Entities.Tables.Estilo.EsquemaDetalle> dataEsquemaDetalle = new();
    private bool licenciaValida = false;
    private bool licenciaExpirada = true;
    private string colorPrimarioSpinner;
    private string colorSecundarioSpinner;

    private RadzenBody body0;

    protected override void OnInitialized()
    {
        //Verificamos si se tiene licencia valida y si no expiro.
        licenciaValida = LicenseController.IsValidLicenseAvailable();
        licenciaExpirada = LicenseController.IsExpiredLicense();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            //Traemos los estilos de la empresa default:
            dataEsquemaDetalle = EstiloController.ObtenerEsquemaDetalles(-1);
            colorPrimarioSpinner = EstiloController.ObtenerItemEstilo(dataEsquemaDetalle, "ColorPrimarioSpinner", true);
            colorSecundarioSpinner = EstiloController.ObtenerItemEstilo(dataEsquemaDetalle, "ColorSecundarioSpinner", true);
            StateHasChanged();
        }
    }
}

<style>
    .spinnerCentrado {
        border: 16px solid @(colorSecundarioSpinner == "" ? "silver" : colorSecundarioSpinner);
        border-top: 16px solid @(colorPrimarioSpinner == "" ? "blue" : colorPrimarioSpinner);
        border-radius: 50%;
        width: 80px;
        height: 80px;
        animation: spin 700ms linear infinite;
        top: 45%;
        left: 40%;
        position: absolute;
        z-index: 3;
    }

</style>