@page "/DispositivoTipoContadoraCrud"
@inject NotificationService NotificationService
 
@if (TipoContadora_entities == null)
{
    <RadzenProgressBar Value="100" ShowValue="false" Mode="ProgressBarMode.Indeterminate" />
}
else
{
    switch (crudMode)
    {
        case CrudMode.Add:
            <RadzenBadge  BadgeStyle="BadgeStyle.Secondary" >
                <ChildContent>
                    <h4 style="color:white;">Ingrese los datos de TipoContadora</h4>
                </ChildContent>
            </RadzenBadge>
            break;
        case CrudMode.Delete:
            <RadzenBadge BadgeStyle="BadgeStyle.Warning" >
                <ChildContent>
                    <h4 style="color:white;">Confirma eliminar el TipoContadora ?</h4>
                </ChildContent>
            </RadzenBadge>
            break;
            case CrudMode.Edit:
            <RadzenBadge BadgeStyle="BadgeStyle.Secondary" >
                <ChildContent>
                    <h4 style="color:white;">Modificación de datos de TipoContadora</h4>
                </ChildContent>
            </RadzenBadge>
            break;         
            case CrudMode.List:
            <RadzenBadge BadgeStyle="BadgeStyle.Secondary" >
                <ChildContent>
                    <div>
                        <h4 style="color:white;">Administración de TipoContadora</h4>
                    </div>
                </ChildContent>
            </RadzenBadge>
            break;  
    }
 <hr>
    if (crudMode == CrudMode.List)
    {
        <RadzenDataGrid AllowFiltering="true" AllowColumnResize="true" FilterMode="FilterMode.Advanced" AllowSorting="true" PageSize="10" AllowPaging="true" PagerHorizontalAlign="HorizontalAlign.Left" ShowPagingSummary="true"
        Data="@TipoContadora_entities" TItem="DepositarioAdminWeb.Entities.Tables.Dispositivo.TipoContadora" ColumnWidth="300px" LogicalFilterOperator="LogicalFilterOperator.Or">
       <EmptyTemplate>
            <p style="color: lightgrey; font-size: 24px; text-align: center; margin: 2rem;">No existen registros.</p>
        </EmptyTemplate>        
        <Columns>
            <RadzenDataGridColumn TItem="DepositarioAdminWeb.Entities.Tables.Dispositivo.TipoContadora" Filterable="false" Sortable="false" TextAlign="TextAlign.Center" Width="120px" >
             <HeaderTemplate>
                 <RadzenButton Icon="add_circle_outline" ButtonStyle="ButtonStyle.Success" Text ="Nuevo" Click="Add">
                 </RadzenButton>
                 </HeaderTemplate>
                 <Template Context="element">
                    <RadzenButton Icon="edit" ButtonStyle="ButtonStyle.Info" Class="m-1" Click="@(args => Edit(element,false))" @onclick:stopPropagation="true">
                    </RadzenButton>
                    <RadzenButton Icon="delete" ButtonStyle="ButtonStyle.Danger" Class="m-1" Click="@(args => Edit(element,true))" @onclick:stopPropagation="true">
                    </RadzenButton>
                </Template>
             </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="DepositarioAdminWeb.Entities.Tables.Dispositivo.TipoContadora" Property="Id" Filterable="false" Title="Id" Frozen="false" Width="50px" TextAlign="TextAlign.Center" />
            <RadzenDataGridColumn TItem="DepositarioAdminWeb.Entities.Tables.Dispositivo.TipoContadora" Title="ModeloId" Property="ModeloId" Width="100px" >
                <Template>
                    @if(Modelo_entities.FirstOrDefault( c => c.Id == @context.ModeloId) != null){
                       <RadzenLabel Text="@Modelo_entities.FirstOrDefault( c => c.Id == @context.ModeloId).Nombre" Component="ModeloId" style="width: 100%">
                            </RadzenLabel>
                        }
                        else
                        {
                       <RadzenLabel Text="No data available" Component="ModeloId" style="width: 100%">
                            </RadzenLabel>                        
                        }
                </Template>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="DepositarioAdminWeb.Entities.Tables.Dispositivo.TipoContadora" Property="Nombre" Filterable="false" Title="Nombre" Frozen="false" Width="50px" TextAlign="TextAlign.Center" >
    </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="DepositarioAdminWeb.Entities.Tables.Dispositivo.TipoContadora" Property="Descripcion" Filterable="false" Title="Descripcion" Frozen="false" Width="50px" TextAlign="TextAlign.Center" >
    </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="DepositarioAdminWeb.Entities.Tables.Dispositivo.TipoContadora" Property="PortName" Filterable="false" Title="PortName" Frozen="false" Width="50px" TextAlign="TextAlign.Center" >
    </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="DepositarioAdminWeb.Entities.Tables.Dispositivo.TipoContadora" Property="Parity" Filterable="false" Title="Parity" Frozen="false" Width="50px" TextAlign="TextAlign.Center" >
    </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="DepositarioAdminWeb.Entities.Tables.Dispositivo.TipoContadora" Property="DataBits" Filterable="false" Title="DataBits" Frozen="false" Width="50px" TextAlign="TextAlign.Center" >
    </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="DepositarioAdminWeb.Entities.Tables.Dispositivo.TipoContadora" Property="ReadBufferSize" Filterable="false" Title="ReadBufferSize" Frozen="false" Width="50px" TextAlign="TextAlign.Center" >
    </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="DepositarioAdminWeb.Entities.Tables.Dispositivo.TipoContadora" Property="StopBits" Filterable="false" Title="StopBits" Frozen="false" Width="50px" TextAlign="TextAlign.Center" >
    </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="DepositarioAdminWeb.Entities.Tables.Dispositivo.TipoContadora" Property="ReadTimeout" Filterable="false" Title="ReadTimeout" Frozen="false" Width="50px" TextAlign="TextAlign.Center" >
    </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="DepositarioAdminWeb.Entities.Tables.Dispositivo.TipoContadora" Property="Handshake" Filterable="false" Title="Handshake" Frozen="false" Width="50px" TextAlign="TextAlign.Center" >
    </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="DepositarioAdminWeb.Entities.Tables.Dispositivo.TipoContadora" Property="BaudRate" Filterable="false" Title="BaudRate" Frozen="false" Width="50px" TextAlign="TextAlign.Center" >
    </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="DepositarioAdminWeb.Entities.Tables.Dispositivo.TipoContadora" Property="RtsEnable" Filterable="false" Title="RtsEnable" Frozen="false" Width="50px" TextAlign="TextAlign.Center" >
            <Template Context="data">
                <RadzenCheckBox TValue ="bool" Value=@data.RtsEnable Disabled="true">
                </RadzenCheckBox>
            </Template>
    </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="DepositarioAdminWeb.Entities.Tables.Dispositivo.TipoContadora" Property="Habilitado" Filterable="false" Title="Habilitado" Frozen="false" Width="50px" TextAlign="TextAlign.Center" >
            <Template Context="data">
                <RadzenCheckBox TValue ="bool" Value=@data.Habilitado Disabled="true">
                </RadzenCheckBox>
            </Template>
    </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="DepositarioAdminWeb.Entities.Tables.Dispositivo.TipoContadora" Property="UsuarioCreacion" Filterable="false" Title="UsuarioCreacion" Frozen="false" Width="50px" TextAlign="TextAlign.Center" >
    </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="DepositarioAdminWeb.Entities.Tables.Dispositivo.TipoContadora" Property="FechaCreacion" Filterable="false" Title="FechaCreacion" Frozen="false" Width="50px" TextAlign="TextAlign.Center" >
    </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="DepositarioAdminWeb.Entities.Tables.Dispositivo.TipoContadora" Property="UsuarioModificacion" Filterable="false" Title="UsuarioModificacion" Frozen="false" Width="50px" TextAlign="TextAlign.Center" >
    </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="DepositarioAdminWeb.Entities.Tables.Dispositivo.TipoContadora" Property="FechaModificacion" Filterable="false" Title="FechaModificacion" Frozen="false" Width="50px" TextAlign="TextAlign.Center" >
    </RadzenDataGridColumn>
        </Columns>
        </RadzenDataGrid>
 <hr>
    }
 
    if (crudMode == CrudMode.Add || crudMode == CrudMode.Edit || crudMode == CrudMode.Delete)
    {
         <RadzenTemplateForm TItem="DepositarioAdminWeb.Entities.Tables.Dispositivo.TipoContadora" Data="@TipoContadora_entity"  @bind-Value="TipoContadora_entity" Submit ="Save" Visible ="@(TipoContadora_entity != null)">
          <ChildContent>
          <div style="margin-bottom: 1rem" class="row">
             <div class="col-md-3">
                 <RadzenLabel Text="Id" Component="Id" style="width: 100%">
                 </RadzenLabel>
             </div>
             <div class="col-md-9">
                 <RadzenNumeric  TValue="long" style="display: block; width: 100%" @bind-Value="@(TipoContadora_entity.Id)" Name="Id" Disabled="true">
                </RadzenNumeric>
             </div>
         </div>
            <div style="margin-bottom: 1rem" class="row">
              <div class="col-md-3">
                <RadzenLabel Text="ModeloId" Component="ModeloId" style="width: 100%">
                </RadzenLabel>
              </div>
              <div class="col-md-9">
                  @if(@Modelo_entities.Count > 0 && @Modelo_entities.FirstOrDefault( c => c.Id == @TipoContadora_entity.ModeloId) != null)
                  {
                        <RadzenDropDown AllowClear="true" TValue="Int64" Class="w-100" @bind-Value="@TipoContadora_entity.ModeloId"
                                    Data=@Modelo_entities TextProperty = "Nombre" ValueProperty = "Id"
                                    Change=@(args => SelectModeloValueChanged(args))
                                    Disabled="@(crudMode==CrudMode.Delete)" />
                  }
                  else
                  {
                       <RadzenDropDown AllowClear="true" TValue="Int64" Class="w-100" 
                                    Data=@Modelo_entities TextProperty = "Nombre" ValueProperty = "Id"
                                    Change=@(args => SelectModeloValueChanged(args))
                                    Disabled="@(crudMode==CrudMode.Delete)" />
                  }
              </div>
            </div>
              <div style="margin-bottom: 1rem" class="row">
                 <div class="col-md-3">
                     <RadzenLabel Text="Nombre" Component="Nombre" style="width: 100%">
                     </RadzenLabel>
                 </div>
                 <div class="col-md-9">
                     <RadzenTextBox  style="display: block" @bind-Value="@(TipoContadora_entity.Nombre)" Name="Nombre" Disabled="@(crudMode==CrudMode.Delete)">
                     </RadzenTextBox>
                     <RadzenRequiredValidator Component="Nombre" Text="Nombre is required" Style="position: absolute" Disabled="@(crudMode==CrudMode.Delete)">
                     </RadzenRequiredValidator>
                 </div>
               </div>
              <div style="margin-bottom: 1rem" class="row">
                 <div class="col-md-3">
                     <RadzenLabel Text="Descripcion" Component="Descripcion" style="width: 100%">
                     </RadzenLabel>
                 </div>
                 <div class="col-md-9">
                     <RadzenTextBox  style="display: block" @bind-Value="@(TipoContadora_entity.Descripcion)" Name="Descripcion" Disabled="@(crudMode==CrudMode.Delete)">
                     </RadzenTextBox>
                     <RadzenRequiredValidator Component="Descripcion" Text="Descripcion is required" Style="position: absolute" Disabled="@(crudMode==CrudMode.Delete)">
                     </RadzenRequiredValidator>
                 </div>
               </div>
              <div style="margin-bottom: 1rem" class="row">
                 <div class="col-md-3">
                     <RadzenLabel Text="PortName" Component="PortName" style="width: 100%">
                     </RadzenLabel>
                 </div>
                 <div class="col-md-9">
                     <RadzenTextBox  style="display: block" @bind-Value="@(TipoContadora_entity.PortName)" Name="PortName" Disabled="@(crudMode==CrudMode.Delete)">
                     </RadzenTextBox>
                     <RadzenRequiredValidator Component="PortName" Text="PortName is required" Style="position: absolute" Disabled="@(crudMode==CrudMode.Delete)">
                     </RadzenRequiredValidator>
                 </div>
               </div>
          <div style="margin-bottom: 1rem" class="row">
             <div class="col-md-3">
                 <RadzenLabel Text="Parity" Component="Parity" style="width: 100%">
                 </RadzenLabel>
             </div>
             <div class="col-md-9">
                 <RadzenNumeric  TValue="int" style="display: block; width: 100%" @bind-Value="@(TipoContadora_entity.Parity)" Name="Parity" Disabled="@(crudMode==CrudMode.Delete)">
                </RadzenNumeric>
             </div>
         </div>
          <div style="margin-bottom: 1rem" class="row">
             <div class="col-md-3">
                 <RadzenLabel Text="DataBits" Component="DataBits" style="width: 100%">
                 </RadzenLabel>
             </div>
             <div class="col-md-9">
                 <RadzenNumeric  TValue="int" style="display: block; width: 100%" @bind-Value="@(TipoContadora_entity.DataBits)" Name="DataBits" Disabled="@(crudMode==CrudMode.Delete)">
                </RadzenNumeric>
             </div>
         </div>
          <div style="margin-bottom: 1rem" class="row">
             <div class="col-md-3">
                 <RadzenLabel Text="ReadBufferSize" Component="ReadBufferSize" style="width: 100%">
                 </RadzenLabel>
             </div>
             <div class="col-md-9">
                 <RadzenNumeric  TValue="int" style="display: block; width: 100%" @bind-Value="@(TipoContadora_entity.ReadBufferSize)" Name="ReadBufferSize" Disabled="@(crudMode==CrudMode.Delete)">
                </RadzenNumeric>
             </div>
         </div>
          <div style="margin-bottom: 1rem" class="row">
             <div class="col-md-3">
                 <RadzenLabel Text="StopBits" Component="StopBits" style="width: 100%">
                 </RadzenLabel>
             </div>
             <div class="col-md-9">
                 <RadzenNumeric  TValue="int" style="display: block; width: 100%" @bind-Value="@(TipoContadora_entity.StopBits)" Name="StopBits" Disabled="@(crudMode==CrudMode.Delete)">
                </RadzenNumeric>
             </div>
         </div>
          <div style="margin-bottom: 1rem" class="row">
             <div class="col-md-3">
                 <RadzenLabel Text="ReadTimeout" Component="ReadTimeout" style="width: 100%">
                 </RadzenLabel>
             </div>
             <div class="col-md-9">
                 <RadzenNumeric  TValue="int" style="display: block; width: 100%" @bind-Value="@(TipoContadora_entity.ReadTimeout)" Name="ReadTimeout" Disabled="@(crudMode==CrudMode.Delete)">
                </RadzenNumeric>
             </div>
         </div>
          <div style="margin-bottom: 1rem" class="row">
             <div class="col-md-3">
                 <RadzenLabel Text="Handshake" Component="Handshake" style="width: 100%">
                 </RadzenLabel>
             </div>
             <div class="col-md-9">
                 <RadzenNumeric  TValue="int" style="display: block; width: 100%" @bind-Value="@(TipoContadora_entity.Handshake)" Name="Handshake" Disabled="@(crudMode==CrudMode.Delete)">
                </RadzenNumeric>
             </div>
         </div>
          <div style="margin-bottom: 1rem" class="row">
             <div class="col-md-3">
                 <RadzenLabel Text="BaudRate" Component="BaudRate" style="width: 100%">
                 </RadzenLabel>
             </div>
             <div class="col-md-9">
                 <RadzenNumeric  TValue="int" style="display: block; width: 100%" @bind-Value="@(TipoContadora_entity.BaudRate)" Name="BaudRate" Disabled="@(crudMode==CrudMode.Delete)">
                </RadzenNumeric>
             </div>
         </div>
              <div style="margin-bottom: 1rem" class="row">
                 <div class="col-md-3">
                <RadzenLabel Text="RtsEnable" Component="RtsEnable" Style="margin-left: 0px; vertical-align: middle;" />
                 </div>
                 <div class="col-md-9">
                <RadzenCheckBox @bind-Value=@TipoContadora_entity.RtsEnable  Name="RtsEnableCheckBox" TValue="bool" Change=@(args => RtsEnableChange(args, @TipoContadora_entity)) />
                 </div>
               </div>
              <div style="margin-bottom: 1rem" class="row">
                 <div class="col-md-3">
                <RadzenLabel Text="Habilitado" Component="Habilitado" Style="margin-left: 0px; vertical-align: middle;" />
                 </div>
                 <div class="col-md-9">
                <RadzenCheckBox @bind-Value=@TipoContadora_entity.Habilitado  Name="HabilitadoCheckBox" TValue="bool" Change=@(args => HabilitadoChange(args, @TipoContadora_entity)) />
                 </div>
               </div>
          <div style="margin-bottom: 1rem" class="row">
             <div class="col-md-3">
                 <RadzenLabel Text="UsuarioCreacion" Component="UsuarioCreacion" style="width: 100%">
                 </RadzenLabel>
             </div>
             <div class="col-md-9">
                 <RadzenNumeric  TValue="long" style="display: block; width: 100%" @bind-Value="@(TipoContadora_entity.UsuarioCreacion)" Name="UsuarioCreacion" Disabled="@(crudMode==CrudMode.Delete)">
                </RadzenNumeric>
             </div>
         </div>
            <div style="margin-bottom: 1rem" class="row">
              <div class="col-md-3">
                <RadzenLabel Text="FechaCreacion" Component="FechaCreacion" style="width: 100%">
                </RadzenLabel>
              </div>
              <div class="col-md-9">
                <RadzenDatePicker ShowTime="true" ShowSeconds ="true" style ="width: 25%" @bind-Value="@(TipoContadora_entity.FechaCreacion)" Name="FechaCreacion" Disabled="@(crudMode==CrudMode.Delete)" >
                </RadzenDatePicker>
              </div>
            </div>
          <div style="margin-bottom: 1rem" class="row">
             <div class="col-md-3">
                 <RadzenLabel Text="UsuarioModificacion" Component="UsuarioModificacion" style="width: 100%">
                 </RadzenLabel>
             </div>
             <div class="col-md-9">
                 <RadzenNumeric  TValue="long" style="display: block; width: 100%" @bind-Value="@(TipoContadora_entity.UsuarioModificacion)" Name="UsuarioModificacion" Disabled="@(crudMode==CrudMode.Delete)">
                </RadzenNumeric>
             </div>
         </div>
            <div style="margin-bottom: 1rem" class="row">
              <div class="col-md-3">
                <RadzenLabel Text="FechaModificacion" Component="FechaModificacion" style="width: 100%">
                </RadzenLabel>
              </div>
              <div class="col-md-9">
                <RadzenDatePicker ShowTime="true" ShowSeconds ="true" style ="width: 25%" @bind-Value="@(TipoContadora_entity.FechaModificacion)" Name="FechaModificacion" Disabled="@(crudMode==CrudMode.Delete)" >
                </RadzenDatePicker>
              </div>
            </div>
            <div class="row">
              <div class="col offset-sm-3">
                <RadzenButton ButtonType="ButtonType.Submit" Icon="save" Text="Aceptar" ButtonStyle="ButtonStyle.Primary">
                </RadzenButton>
                <RadzenButton ButtonStyle="ButtonStyle.Secondary" Icon = "save" style="margin-left: 1rem" Text="Cancelar" Click="Cancel">
                </RadzenButton>
              </div>
            </div>
           </ChildContent>
         </RadzenTemplateForm>
 <hr>
    }
 
    <RadzenNotification /> 
}
 
@code {
    /// <summary>
    /// Crud Mode Enum
    /// </summary>
    private enum CrudMode
    {
        List,
        Add,
        Edit,
        Delete
    }
    /// <summary>
    /// Variables to handle main entity
    /// </summary>
    private DepositarioAdminWeb.Entities.Tables.Dispositivo.TipoContadora TipoContadora_entity = new();
    private List<DepositarioAdminWeb.Entities.Tables.Dispositivo.TipoContadora> TipoContadora_entities = null;
 
    /// <summary>
    /// Variables to handle Relation between TipoContadora.ModeloId and Modelo.Id
    /// </summary>
    private DepositarioAdminWeb.Entities.Tables.Dispositivo.Modelo Modelo_entity = new();
    private List<DepositarioAdminWeb.Entities.Tables.Dispositivo.Modelo>? Modelo_entities;
 
    /// <summary>
    ///  Page crud mode {List,Add,Edit,Delete}
    /// </summary>
    private CrudMode crudMode = CrudMode.List;
 
    protected override async Task OnInitializedAsync()
    {
        await Task.Run(LoadMainEntityData);
        await Task.Run(LoadTypesData);
    }
    #region Loading entities data
    /// <summary>
    /// Loads main entity data
    /// </summary>
    private void LoadMainEntityData()
    {
        DepositarioAdminWeb.Business.Tables.Dispositivo.TipoContadora entity = new();
        TipoContadora_entities = entity.Items();
    }
    /// <summary>
    /// Loads Type Tables data
    /// </summary>
    private void LoadTypesData()
    {
        DepositarioAdminWeb.Business.Tables.Dispositivo.Modelo Modelo_local = new();
        Modelo_entities = Modelo_local.Items();
 
    }
 
    #endregion
 
    /// <summary>
    /// Initializations for adding a new entity
    /// </summary>
    private void Add()
    {
        //Main entity initialization
        TipoContadora_entity = new();
        //Relations entities initialization
        Modelo_entity = new(); 
        crudMode = CrudMode.Add;
    }
    /// <summary>
    /// <summary>
    /// Initializations for editing an entity
    /// </summary>
    private void Edit(DepositarioAdminWeb.Entities.Tables.Dispositivo.TipoContadora item, bool delete)
    {
             TipoContadora_entity = item;
            Modelo_entity = new() { 
            Id = Modelo_entities.FirstOrDefault(c => c.Id == TipoContadora_entity.ModeloId).Id, 
            Nombre = Modelo_entities.FirstOrDefault(c => c.Id == TipoContadora_entity.ModeloId).Nombre
            };
        if (delete)
            crudMode = CrudMode.Delete;
        else
            crudMode = CrudMode.Edit;
    }
    /// <summary>
    /// Operation depending on Crud mode
    /// </summary>
    private async Task Save()
    {
        string actionInformation = string.Empty;
        DepositarioAdminWeb.Business.Tables.Dispositivo.TipoContadora crud = new();
        switch (crudMode)
        {
            case CrudMode.Add:
                crud.Add(TipoContadora_entity);
                actionInformation = "agregado.";
                break;
            case CrudMode.Edit:
                crud.Update(TipoContadora_entity);
                actionInformation = "modificado.";
                break;
            case CrudMode.Delete:
                crud.Delete(TipoContadora_entity);
                actionInformation = "eliminado.";
                break;
        }
 
        // Sets Crud mode to List
        crudMode = CrudMode.List;
 
        ShowNotification(new NotificationMessage { 
            Severity = NotificationSeverity.Success, 
            Summary = "El registro ha sido ", 
            Detail = actionInformation, 
            Duration = 4000 });
       
            await Task.Run(LoadMainEntityData);
    }
    /// <summary>
    /// Crud mode cancellation and default mode
    /// </summary>
    private void Cancel()
    {
        crudMode = CrudMode.List;  
        LoadMainEntityData();
    }
    /// <summary>
    /// Sets detail panel title - TODO: Implement Multilanguage
    /// </summary>
    /// <returns></returns>
    private string GetDialogTitle()
    {
        string retValue = string.Empty;
        switch (crudMode)
        {
            case CrudMode.Add:
                retValue = "Nuevo...";
                break;
            case CrudMode.Edit:
                retValue = "Editar...";
                break;
            case CrudMode.Delete:
                retValue = "Borrar...";
                break;
        }
        return retValue;
    }
    #region Notifications
    private void ShowNotification(NotificationMessage message)
    {
        NotificationService.Notify(message);
 
    }
 
    #endregion
    #region Selection events
    /// <summary>
    /// Modelo value changed
    /// </summary>
    /// <param name="item"></param>
    private void SelectModeloValueChanged(object item)
    {
    }
 
    /// <summary>
    /// Entity is binded, however it sets anyway.
    /// </summary>
    /// <returns></returns>
    void RtsEnableChange(bool? value,DepositarioAdminWeb.Entities.Tables.Dispositivo.TipoContadora item)
    {
         TipoContadora_entity = item;
    }
    /// <summary>
    /// Entity is binded, however it sets anyway.
    /// </summary>
    /// <returns></returns>
    void HabilitadoChange(bool? value,DepositarioAdminWeb.Entities.Tables.Dispositivo.TipoContadora item)
    {
         TipoContadora_entity = item;
    }
    #endregion
 
    #region Export
 
    #endregion
 
}
