@page "/olvidoPassword"
@layout LoginLayout

@using Radzen
@using Radzen.Blazor
@using Microsoft.AspNetCore.Identity;
@using Microsoft.AspNetCore.Authorization
@using Permaquim.Depositary.Web.Administration.Controllers;
@using System.Threading;

@inject NavigationManager NavManager
@inject Microsoft.Extensions.Localization.IStringLocalizer<Login> L
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage
@inject NotificationService NotificationService

<RadzenContent Container="main">
    <ChildContent>
        <RadzenTemplateForm TItem="OlvidoPasswordForm" Data="@olvidoPasswordForm" Submit="@VerificarExistenciaUsuario">
            @if (estaCargando)
            {
                <div class="spinnerCentrado"></div>
            }
            <RadzenLabel Component="NickName" style="display: block; margin-top: 16px" Text="Username">
            </RadzenLabel>
            <RadzenTextBox Disabled="@estaCargando" @bind-Value="@(olvidoPasswordForm.NickName)" style="width: 100%" Name="NickName">
            </RadzenTextBox>
            <RadzenRequiredValidator Component="NickName">
            </RadzenRequiredValidator>
            <RadzenButton ButtonType="ButtonType.Submit" Disabled="@estaCargando" style="display: block; margin-top: 16px; width: 100%; background-color: #4158ff" Text="Recuperar">
            </RadzenButton>
        </RadzenTemplateForm>
    </ChildContent>
</RadzenContent>

@code {

    private class OlvidoPasswordForm
    {
        public string NickName { get; set; }
    }
    private OlvidoPasswordForm olvidoPasswordForm = new OlvidoPasswordForm();


    private List<Entities.TextoLenguaje> dataLenguaje;
    private bool estaCargando { get; set; }

    //Datasets
    private Depositary.Entities.Tables.Seguridad.Usuario? dataUsuario = new();

    protected override void OnInitialized()
    {
        estaCargando = false;
        base.OnInitialized();
    }

    protected override async Task OnInitializedAsync()
    {
        dataLenguaje = MultilenguajeController.ObtenerTextosLenguaje(-1);
    }

    protected async void VerificarExistenciaUsuario()
    {
        estaCargando = true;
        StateHasChanged();
        string resultado = await Task.Run(() => SeguridadController.ReiniciarPasswordUsuario(olvidoPasswordForm.NickName, dataLenguaje));
        if (resultado != "")
        {
            //Se muestra el error
            NotificationService.Notify(new NotificationMessage() { Severity = NotificationSeverity.Error, Summary = "Error", Detail = resultado, Duration = 3000 });
            estaCargando = false;
            StateHasChanged();
        }
        else
        {
            //Se informa al usuario que se cambio la password
            NotificationService.Notify(new NotificationMessage() { Severity = NotificationSeverity.Success, Summary = "Accion procesada", Detail = MultilenguajeController.ObtenerTextoPorClave("EXITO_REINICIO_PASSWORD", dataLenguaje), Duration = 3000 });

            //Esperamos 2 segundos y enviamos al login nuevamente.
            Thread.Sleep(2000);
            estaCargando = false;
            StateHasChanged();
            NavManager.NavigateTo("login", true);
        }

    }
 }
