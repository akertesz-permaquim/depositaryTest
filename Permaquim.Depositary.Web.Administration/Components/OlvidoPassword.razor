@page "/olvidoPassword"
@layout LoginLayout

@using Radzen
@using Radzen.Blazor
@using Microsoft.AspNetCore.Identity;
@using Microsoft.AspNetCore.Authorization
@using Permaquim.Depositary.Web.Administration.Controllers;
@using System.Threading;

@inject NavigationManager NavManager
@inject Microsoft.Extensions.Localization.IStringLocalizer<Login> L
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage
@inject NotificationService NotificationService

<RadzenContent Container="main">
    <ChildContent>
        <RadzenTemplateForm TItem="OlvidoPasswordForm" Data="@olvidoPasswordForm" Submit="@VerificarExistenciaUsuario">
            @if (estaCargando)
            {
                <div class="spinnerCentrado"></div>
            }
            <RadzenLabel Component="Mail" style="display: block; margin-top: 16px" Text="Mail">
            </RadzenLabel>
            <RadzenTextBox Disabled="@estaCargando" @bind-Value="@(olvidoPasswordForm.Mail)" style="width: 100%" Name="Mail">
            </RadzenTextBox>
            <RadzenRequiredValidator Component="Mail">
            </RadzenRequiredValidator>
            <RadzenEmailValidator Component="Mail">
            </RadzenEmailValidator>
            <RadzenButton ButtonType="ButtonType.Submit" Disabled="@estaCargando" style="display: block; margin-top: 16px; width: 100%; background-color: #4158ff" Text="Recuperar">
            </RadzenButton>
        </RadzenTemplateForm>
    </ChildContent>
</RadzenContent>

@code {

    private class OlvidoPasswordForm
    {
        public string Mail { get; set; }
    }
    private OlvidoPasswordForm olvidoPasswordForm = new OlvidoPasswordForm();


    private List<Entities.TextoLenguaje> dataLenguaje;
    private bool estaCargando { get; set; }

    //Datasets
    private Depositary.Entities.Tables.Seguridad.Usuario? dataUsuario = new();

    protected override void OnInitialized()
    {
        estaCargando = false;
        base.OnInitialized();
    }

    protected override async Task OnInitializedAsync()
    {
        dataLenguaje = MultilenguajeController.ObtenerTextosLenguaje(-1);
    }

    protected async void VerificarExistenciaUsuario()
    {
        estaCargando = true;
        StateHasChanged();
        var usuario = await Task.Run(() => SeguridadController.ObtenerUsuarioPorMail(olvidoPasswordForm.Mail));
        if (usuario != null)
        {
            //Aca enviamos el mail.
            //AuditController.Log(Entities.AuditEntities.LogTypeEnum.Information,"Forgotten password email sent to "+usuario.Mail,"");

        }

        //Se informa al usuario que se envio el mail, exista o no el usuario para evitar dar datos.
        NotificationService.Notify(new NotificationMessage() { Severity = NotificationSeverity.Success, Summary = "Accion procesada", Detail = "Si posee una cuenta registrada con ese mail recibira un mensaje con una nueva contraseña", Duration = 3000 });
        //Esperamos 2 segundos y enviamos al login nuevamente.
        Thread.Sleep(2000);

        estaCargando = false;
        StateHasChanged();

        NavManager.NavigateTo("login", true);
    }
 }
