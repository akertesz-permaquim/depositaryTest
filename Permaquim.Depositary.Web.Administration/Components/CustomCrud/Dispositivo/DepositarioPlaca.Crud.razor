@using Permaquim.Depositary.Web.Administration.Controllers
@inject NotificationService NotificationService
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage
@inject NavigationManager NavManager

@if (estaProcesando)
{
    <div class="spinnerCentrado"></div>
}

@if (dataFunciones != null)
{
    @if (DepositarioPlaca_entities == null)
    {
        <div style="height:80px;">
            <div class="spinnerCentradoLateralRelativo"></div>
        </div>
    }
    else
    {
        switch (crudMode)
        {
            case CrudMode.Add:
                <RadzenBadge Style=@EstiloController.ObtenerItemEstilo(dataEsquemaDetalle, "ColorFondoTituloBadge", false) BadgeStyle="BadgeStyle.Secondary">
                    <ChildContent>
                        <h4 style="color:white;">@MultilenguajeController.ObtenerTextoPorClave("ABM_A_NAME_Dispositivo.DepositarioPlaca",dataLenguaje)</h4>
                    </ChildContent>
                </RadzenBadge>
                break;
            case CrudMode.Delete:
                <RadzenBadge Style=@EstiloController.ObtenerItemEstilo(dataEsquemaDetalle, "ColorFondoTituloBadgeBorrar", false) BadgeStyle="BadgeStyle.Warning">
                    <ChildContent>
                        <h4 style="color:white;">@MultilenguajeController.ObtenerTextoPorClave("ABM_D_NAME_Dispositivo.DepositarioPlaca",dataLenguaje)</h4>
                    </ChildContent>
                </RadzenBadge>
                break;
            case CrudMode.Edit:
                <RadzenBadge Style=@EstiloController.ObtenerItemEstilo(dataEsquemaDetalle, "ColorFondoTituloBadge", false) BadgeStyle="BadgeStyle.Secondary">
                    <ChildContent>
                        <h4 style="color:white;">@MultilenguajeController.ObtenerTextoPorClave("ABM_M_NAME_Dispositivo.DepositarioPlaca",dataLenguaje)</h4>
                    </ChildContent>
                </RadzenBadge>
                break;
            case CrudMode.List:
                <RadzenBadge Style=@EstiloController.ObtenerItemEstilo(dataEsquemaDetalle, "ColorFondoTituloBadge", false) BadgeStyle="BadgeStyle.Secondary">
                    <ChildContent>
                        <div>
                            <h4 style="color:white;">@MultilenguajeController.ObtenerTextoPorClave("ABM_L_NAME_Dispositivo.DepositarioPlaca",dataLenguaje)</h4>
                        </div>
                    </ChildContent>
                </RadzenBadge>
                break;
        }
        <hr>
        if (crudMode == CrudMode.List)
        {
            <RadzenDataGrid @bind-Settings="@GridSettings" FilterText="@MultilenguajeController.ObtenerTextoPorClave("CABECERA_FILTRO",dataLenguaje)" IsEmptyText="@MultilenguajeController.ObtenerTextoPorClave("FILTRO_ES_VACIO",dataLenguaje)" IsNotNullText="@MultilenguajeController.ObtenerTextoPorClave("FILTRO_NO_NULO",dataLenguaje)" IsNullText="@MultilenguajeController.ObtenerTextoPorClave("FILTRO_ES_NULO",dataLenguaje)" LessThanText="@MultilenguajeController.ObtenerTextoPorClave("FILTRO_MENOR_A",dataLenguaje)" LessThanOrEqualsText="@MultilenguajeController.ObtenerTextoPorClave("FILTRO_MENOR_A_O_IGUAL",dataLenguaje)" NotEqualsText="@MultilenguajeController.ObtenerTextoPorClave("FILTRO_NO_EQUIVALE",dataLenguaje)" IsNotEmptyText="@MultilenguajeController.ObtenerTextoPorClave("FILTRO_NO_VACIO",dataLenguaje)" OrOperatorText="@MultilenguajeController.ObtenerTextoPorClave("FILTRO_OPERADOR_OR",dataLenguaje)" GreaterThanText="@MultilenguajeController.ObtenerTextoPorClave("FILTRO_MAYOR_A",dataLenguaje)" GreaterThanOrEqualsText="@MultilenguajeController.ObtenerTextoPorClave("FILTRO_MAYOR_A_O_IGUAL",dataLenguaje)" AndOperatorText="@MultilenguajeController.ObtenerTextoPorClave("FILTRO_OPERADOR_AND",dataLenguaje)" AllColumnsText="@MultilenguajeController.ObtenerTextoPorClave("MOSTRAR_TODAS_COLUMNAS",dataLenguaje)" ContainsText="@MultilenguajeController.ObtenerTextoPorClave("FILTRO_CONTIENE",dataLenguaje)" DoesNotContainText="@MultilenguajeController.ObtenerTextoPorClave("FILTRO_NO_CONTIENE",dataLenguaje)" ClearFilterText="@MultilenguajeController.ObtenerTextoPorClave("LIMPIAR_FILTRO",dataLenguaje)" ApplyFilterText="@MultilenguajeController.ObtenerTextoPorClave("APLICAR_FILTRO",dataLenguaje)" EqualsText="@MultilenguajeController.ObtenerTextoPorClave("FILTRO_EXACTO",dataLenguaje)" EndsWithText="@MultilenguajeController.ObtenerTextoPorClave("FILTRO_TERMINA_CON",dataLenguaje)" PageSizeText="@MultilenguajeController.ObtenerTextoPorClave("REGISTROS_POR_PAGINA",dataLenguaje)" StartsWithText="@MultilenguajeController.ObtenerTextoPorClave("EMPIEZA_CON",dataLenguaje)" ColumnsShowingText="@MultilenguajeController.ObtenerTextoPorClave("COLUMNAS_OPCIONALES",dataLenguaje)" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" CellRender="@DepositarioPlacaCellRender" PageSizeOptions="@(new int[]{10,20,50,100})" FilterMode="FilterMode.Advanced" PageSize="@EstiloController.ObtenerPaginadoDefault(dataUsuario.EmpresaId)" PagerHorizontalAlign="HorizontalAlign.Left" ShowPagingSummary="true"
                AllowColumnReorder=@CustomizadorController.ObtenerPropiedadGrilla("HabilitarMovilidad",dataCustomizacionPagina.AtributosTabla) AllowColumnPicking=@CustomizadorController.ObtenerPropiedadGrilla("HabilitarColumnasOpcionales",dataCustomizacionPagina.AtributosTabla) AllowFiltering=@CustomizadorController.ObtenerPropiedadGrilla("HabilitarFiltrado",dataCustomizacionPagina.AtributosTabla) AllowColumnResize=@CustomizadorController.ObtenerPropiedadGrilla("HabilitarRedimensionamiento",dataCustomizacionPagina.AtributosTabla) AllowSorting=@CustomizadorController.ObtenerPropiedadGrilla("HabilitarOrdenamiento",dataCustomizacionPagina.AtributosTabla) AllowPaging=@CustomizadorController.ObtenerPropiedadGrilla("HabilitarPaginado",dataCustomizacionPagina.AtributosTabla) AllowGrouping=@CustomizadorController.ObtenerPropiedadGrilla("HabilitarAgrupamiento",dataCustomizacionPagina.AtributosTabla)
                Data="@DepositarioPlaca_entities" TItem="Depositary.Entities.Tables.Dispositivo.DepositarioPlaca" ColumnWidth="300px" LogicalFilterOperator="LogicalFilterOperator.And">
                <EmptyTemplate>
                    <p style="color: lightgrey; font-size: 24px; text-align: center; margin: 2rem;">No existen registros.</p>
                </EmptyTemplate>
                <Columns>
                    <RadzenDataGridColumn TItem="Depositary.Entities.Tables.Dispositivo.DepositarioPlaca" TextAlign="TextAlign.Center" Filterable=@CustomizadorController.ObtenerPropiedadColumnaFiltrable("TemplateABM",dataCustomizacionPagina.AtributosColumnas) Groupable=@CustomizadorController.ObtenerPropiedadColumnaAgrupable("TemplateABM",dataCustomizacionPagina.AtributosColumnas) Resizable=@CustomizadorController.ObtenerPropiedadColumnaRedimensionable("TemplateABM",dataCustomizacionPagina.AtributosColumnas) Reorderable=@CustomizadorController.ObtenerPropiedadColumnaMovible("TemplateABM",dataCustomizacionPagina.AtributosColumnas) MinWidth=@CustomizadorController.ObtenerPropiedadAnchoMinimoColumnaEnGrilla("TemplateABM",dataCustomizacionPagina.AtributosColumnas) Width=@CustomizadorController.ObtenerPropiedadAnchoColumnaEnGrilla("TemplateABM",dataCustomizacionPagina.AtributosColumnas) Pickable=@CustomizadorController.ObtenerPropiedadVisibilidadColumnaEnSelector("TemplateABM",dataCustomizacionPagina.AtributosColumnas) OrderIndex=@CustomizadorController.ObtenerPropiedadPosicionColumnaEnGrilla("TemplateABM",dataCustomizacionPagina.AtributosColumnas) Sortable=@CustomizadorController.ObtenerPropiedadColumnaOrdenable("TemplateABM",dataCustomizacionPagina.AtributosColumnas) Visible=@CustomizadorController.ObtenerPropiedadVisibilidadColumna("TemplateABM",dataCustomizacionPagina.AtributosColumnas)>
                        <HeaderTemplate>
                            <RadzenButton Icon="add_circle_outline" ButtonStyle="ButtonStyle.Success" Visible=@SeguridadController.VerificarPermisoFuncion("DispositivoDepositarioPlaca",dataFunciones,"PuedeAgregar") Text=@MultilenguajeController.ObtenerTextoPorClave("BOTON_NUEVO",dataLenguaje) Click="Add">
                            </RadzenButton>
                        </HeaderTemplate>
                        <Template Context="element">
                            <RadzenButton Icon="edit" ButtonStyle="ButtonStyle.Info" Visible=@SeguridadController.VerificarPermisoFuncion("DispositivoDepositarioPlaca",dataFunciones,"PuedeModificar") Class="m-1" Click="@(args => Edit(element,false))" @onclick:stopPropagation="true">
                            </RadzenButton>
                            <RadzenButton Icon="delete" ButtonStyle="ButtonStyle.Danger" Visible=@SeguridadController.VerificarPermisoFuncion("DispositivoDepositarioPlaca",dataFunciones,"PuedeEliminar") Class="m-1" Click="@(args => Edit(element,true))" @onclick:stopPropagation="true">
                            </RadzenButton>
                        </Template>
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn TItem="Depositary.Entities.Tables.Dispositivo.DepositarioPlaca" Property="Id" Title=@MultilenguajeController.ObtenerTextoPorClave("ID",dataLenguaje) Frozen="false" TextAlign="TextAlign.Center"
                              Filterable=@CustomizadorController.ObtenerPropiedadColumnaFiltrable("Id",dataCustomizacionPagina.AtributosColumnas) Groupable=@CustomizadorController.ObtenerPropiedadColumnaAgrupable("Id",dataCustomizacionPagina.AtributosColumnas) Resizable=@CustomizadorController.ObtenerPropiedadColumnaRedimensionable("Id",dataCustomizacionPagina.AtributosColumnas) Reorderable=@CustomizadorController.ObtenerPropiedadColumnaMovible("Id",dataCustomizacionPagina.AtributosColumnas) MinWidth=@CustomizadorController.ObtenerPropiedadAnchoMinimoColumnaEnGrilla("Id",dataCustomizacionPagina.AtributosColumnas) Width=@CustomizadorController.ObtenerPropiedadAnchoColumnaEnGrilla("Id",dataCustomizacionPagina.AtributosColumnas) Pickable=@CustomizadorController.ObtenerPropiedadVisibilidadColumnaEnSelector("Id",dataCustomizacionPagina.AtributosColumnas) OrderIndex=@CustomizadorController.ObtenerPropiedadPosicionColumnaEnGrilla("Id",dataCustomizacionPagina.AtributosColumnas) Sortable=@CustomizadorController.ObtenerPropiedadColumnaOrdenable("Id",dataCustomizacionPagina.AtributosColumnas) Visible=@CustomizadorController.ObtenerPropiedadVisibilidadColumna("Id",dataCustomizacionPagina.AtributosColumnas)>
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn TItem="Depositary.Entities.Tables.Dispositivo.DepositarioPlaca" Title=@MultilenguajeController.ObtenerTextoPorClave("DEPOSITARIOID",dataLenguaje) Property="DepositarioId" Type="typeof(IEnumerable<Int64>)" FilterValue="@selectedFilter_DepositarioId" FilterOperator="FilterOperator.Contains" LogicalFilterOperator="LogicalFilterOperator.And"
                              Filterable=@CustomizadorController.ObtenerPropiedadColumnaFiltrable("DepositarioId",dataCustomizacionPagina.AtributosColumnas) Groupable=@CustomizadorController.ObtenerPropiedadColumnaAgrupable("DepositarioId",dataCustomizacionPagina.AtributosColumnas) Resizable=@CustomizadorController.ObtenerPropiedadColumnaRedimensionable("DepositarioId",dataCustomizacionPagina.AtributosColumnas) Reorderable=@CustomizadorController.ObtenerPropiedadColumnaMovible("DepositarioId",dataCustomizacionPagina.AtributosColumnas) MinWidth=@CustomizadorController.ObtenerPropiedadAnchoMinimoColumnaEnGrilla("DepositarioId",dataCustomizacionPagina.AtributosColumnas) Width=@CustomizadorController.ObtenerPropiedadAnchoColumnaEnGrilla("DepositarioId",dataCustomizacionPagina.AtributosColumnas) Pickable=@CustomizadorController.ObtenerPropiedadVisibilidadColumnaEnSelector("DepositarioId",dataCustomizacionPagina.AtributosColumnas) OrderIndex=@CustomizadorController.ObtenerPropiedadPosicionColumnaEnGrilla("DepositarioId",dataCustomizacionPagina.AtributosColumnas) Sortable=@CustomizadorController.ObtenerPropiedadColumnaOrdenable("DepositarioId",dataCustomizacionPagina.AtributosColumnas) Visible=@CustomizadorController.ObtenerPropiedadVisibilidadColumna("DepositarioId",dataCustomizacionPagina.AtributosColumnas)>
                        <Template>
                            @if (Depositario_DepositarioId_entities.FirstOrDefault(c => c.Id == @context.DepositarioId) != null)
                            {
                                <RadzenLabel Text="@Depositario_DepositarioId_entities.FirstOrDefault( c => c.Id == @context.DepositarioId).Nombre" Component="DepositarioId" style="width: 100%">
                                </RadzenLabel>
                            }
                            else
                            {
                                <RadzenLabel Text="No data available" Component="DepositarioId" style="width: 100%">
                                </RadzenLabel>
                            }
                        </Template>
                        <FilterTemplate>
                            <div style="margin-top: 1rem;font-weight: 600">@MultilenguajeController.ObtenerTextoPorClave("CABECERA_FILTRO",dataLenguaje)</div>
                            <RadzenDropDown @bind-Value=@selectedFilter_DepositarioId Data="@Depositario_DepositarioId_filter" Change="OnSelectedFilter_DepositarioId_Changed" AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" ValueProperty="Id" TextProperty="Nombre" AllowClear="true" Multiple="true" />
                        </FilterTemplate>
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn TItem="Depositary.Entities.Tables.Dispositivo.DepositarioPlaca" Title=@MultilenguajeController.ObtenerTextoPorClave("TIPOPLACAID",dataLenguaje) Property="TipoPlacaId" Type="typeof(IEnumerable<Int64>)" FilterValue="@selectedFilter_TipoPlacaId" FilterOperator="FilterOperator.Contains" LogicalFilterOperator="LogicalFilterOperator.And"
                              Filterable=@CustomizadorController.ObtenerPropiedadColumnaFiltrable("TipoPlacaId",dataCustomizacionPagina.AtributosColumnas) Groupable=@CustomizadorController.ObtenerPropiedadColumnaAgrupable("TipoPlacaId",dataCustomizacionPagina.AtributosColumnas) Resizable=@CustomizadorController.ObtenerPropiedadColumnaRedimensionable("TipoPlacaId",dataCustomizacionPagina.AtributosColumnas) Reorderable=@CustomizadorController.ObtenerPropiedadColumnaMovible("TipoPlacaId",dataCustomizacionPagina.AtributosColumnas) MinWidth=@CustomizadorController.ObtenerPropiedadAnchoMinimoColumnaEnGrilla("TipoPlacaId",dataCustomizacionPagina.AtributosColumnas) Width=@CustomizadorController.ObtenerPropiedadAnchoColumnaEnGrilla("TipoPlacaId",dataCustomizacionPagina.AtributosColumnas) Pickable=@CustomizadorController.ObtenerPropiedadVisibilidadColumnaEnSelector("TipoPlacaId",dataCustomizacionPagina.AtributosColumnas) OrderIndex=@CustomizadorController.ObtenerPropiedadPosicionColumnaEnGrilla("TipoPlacaId",dataCustomizacionPagina.AtributosColumnas) Sortable=@CustomizadorController.ObtenerPropiedadColumnaOrdenable("TipoPlacaId",dataCustomizacionPagina.AtributosColumnas) Visible=@CustomizadorController.ObtenerPropiedadVisibilidadColumna("TipoPlacaId",dataCustomizacionPagina.AtributosColumnas)>
                        <Template>
                            @if (TipoPlaca_TipoPlacaId_entities.FirstOrDefault(c => c.Id == @context.TipoPlacaId) != null)
                            {
                                <RadzenLabel Text="@TipoPlaca_TipoPlacaId_entities.FirstOrDefault( c => c.Id == @context.TipoPlacaId).Nombre" Component="TipoPlacaId" style="width: 100%">
                                </RadzenLabel>
                            }
                            else
                            {
                                <RadzenLabel Text="No data available" Component="TipoPlacaId" style="width: 100%">
                                </RadzenLabel>
                            }
                        </Template>
                        <FilterTemplate>
                            <div style="margin-top: 1rem;font-weight: 600">@MultilenguajeController.ObtenerTextoPorClave("CABECERA_FILTRO",dataLenguaje)</div>
                            <RadzenDropDown @bind-Value=@selectedFilter_TipoPlacaId Data="@TipoPlaca_TipoPlacaId_filter" Change="OnSelectedFilter_TipoPlacaId_Changed" AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" ValueProperty="Id" TextProperty="Nombre" AllowClear="true" Multiple="true" />
                        </FilterTemplate>
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn TItem="Depositary.Entities.Tables.Dispositivo.DepositarioPlaca" Property="PortName" Title=@MultilenguajeController.ObtenerTextoPorClave("PORTNAME",dataLenguaje) Frozen="false" TextAlign="TextAlign.Center"
                              Filterable=@CustomizadorController.ObtenerPropiedadColumnaFiltrable("PortName",dataCustomizacionPagina.AtributosColumnas) Groupable=@CustomizadorController.ObtenerPropiedadColumnaAgrupable("PortName",dataCustomizacionPagina.AtributosColumnas) Resizable=@CustomizadorController.ObtenerPropiedadColumnaRedimensionable("PortName",dataCustomizacionPagina.AtributosColumnas) Reorderable=@CustomizadorController.ObtenerPropiedadColumnaMovible("PortName",dataCustomizacionPagina.AtributosColumnas) MinWidth=@CustomizadorController.ObtenerPropiedadAnchoMinimoColumnaEnGrilla("PortName",dataCustomizacionPagina.AtributosColumnas) Width=@CustomizadorController.ObtenerPropiedadAnchoColumnaEnGrilla("PortName",dataCustomizacionPagina.AtributosColumnas) Pickable=@CustomizadorController.ObtenerPropiedadVisibilidadColumnaEnSelector("PortName",dataCustomizacionPagina.AtributosColumnas) OrderIndex=@CustomizadorController.ObtenerPropiedadPosicionColumnaEnGrilla("PortName",dataCustomizacionPagina.AtributosColumnas) Sortable=@CustomizadorController.ObtenerPropiedadColumnaOrdenable("PortName",dataCustomizacionPagina.AtributosColumnas) Visible=@CustomizadorController.ObtenerPropiedadVisibilidadColumna("PortName",dataCustomizacionPagina.AtributosColumnas)>
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn TItem="Depositary.Entities.Tables.Dispositivo.DepositarioPlaca" Property="Parity" Title=@MultilenguajeController.ObtenerTextoPorClave("PARITY",dataLenguaje) Frozen="false" TextAlign="TextAlign.Center"
                              Filterable=@CustomizadorController.ObtenerPropiedadColumnaFiltrable("Parity",dataCustomizacionPagina.AtributosColumnas) Groupable=@CustomizadorController.ObtenerPropiedadColumnaAgrupable("Parity",dataCustomizacionPagina.AtributosColumnas) Resizable=@CustomizadorController.ObtenerPropiedadColumnaRedimensionable("Parity",dataCustomizacionPagina.AtributosColumnas) Reorderable=@CustomizadorController.ObtenerPropiedadColumnaMovible("Parity",dataCustomizacionPagina.AtributosColumnas) MinWidth=@CustomizadorController.ObtenerPropiedadAnchoMinimoColumnaEnGrilla("Parity",dataCustomizacionPagina.AtributosColumnas) Width=@CustomizadorController.ObtenerPropiedadAnchoColumnaEnGrilla("Parity",dataCustomizacionPagina.AtributosColumnas) Pickable=@CustomizadorController.ObtenerPropiedadVisibilidadColumnaEnSelector("Parity",dataCustomizacionPagina.AtributosColumnas) OrderIndex=@CustomizadorController.ObtenerPropiedadPosicionColumnaEnGrilla("Parity",dataCustomizacionPagina.AtributosColumnas) Sortable=@CustomizadorController.ObtenerPropiedadColumnaOrdenable("Parity",dataCustomizacionPagina.AtributosColumnas) Visible=@CustomizadorController.ObtenerPropiedadVisibilidadColumna("Parity",dataCustomizacionPagina.AtributosColumnas)>
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn TItem="Depositary.Entities.Tables.Dispositivo.DepositarioPlaca" Property="DataBits" Title=@MultilenguajeController.ObtenerTextoPorClave("DATABITS",dataLenguaje) Frozen="false" TextAlign="TextAlign.Center"
                              Filterable=@CustomizadorController.ObtenerPropiedadColumnaFiltrable("DataBits",dataCustomizacionPagina.AtributosColumnas) Groupable=@CustomizadorController.ObtenerPropiedadColumnaAgrupable("DataBits",dataCustomizacionPagina.AtributosColumnas) Resizable=@CustomizadorController.ObtenerPropiedadColumnaRedimensionable("DataBits",dataCustomizacionPagina.AtributosColumnas) Reorderable=@CustomizadorController.ObtenerPropiedadColumnaMovible("DataBits",dataCustomizacionPagina.AtributosColumnas) MinWidth=@CustomizadorController.ObtenerPropiedadAnchoMinimoColumnaEnGrilla("DataBits",dataCustomizacionPagina.AtributosColumnas) Width=@CustomizadorController.ObtenerPropiedadAnchoColumnaEnGrilla("DataBits",dataCustomizacionPagina.AtributosColumnas) Pickable=@CustomizadorController.ObtenerPropiedadVisibilidadColumnaEnSelector("DataBits",dataCustomizacionPagina.AtributosColumnas) OrderIndex=@CustomizadorController.ObtenerPropiedadPosicionColumnaEnGrilla("DataBits",dataCustomizacionPagina.AtributosColumnas) Sortable=@CustomizadorController.ObtenerPropiedadColumnaOrdenable("DataBits",dataCustomizacionPagina.AtributosColumnas) Visible=@CustomizadorController.ObtenerPropiedadVisibilidadColumna("DataBits",dataCustomizacionPagina.AtributosColumnas)>
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn TItem="Depositary.Entities.Tables.Dispositivo.DepositarioPlaca" Property="ReadBufferSize" Title=@MultilenguajeController.ObtenerTextoPorClave("READBUFFERSIZE",dataLenguaje) Frozen="false" TextAlign="TextAlign.Center"
                              Filterable=@CustomizadorController.ObtenerPropiedadColumnaFiltrable("ReadBufferSize",dataCustomizacionPagina.AtributosColumnas) Groupable=@CustomizadorController.ObtenerPropiedadColumnaAgrupable("ReadBufferSize",dataCustomizacionPagina.AtributosColumnas) Resizable=@CustomizadorController.ObtenerPropiedadColumnaRedimensionable("ReadBufferSize",dataCustomizacionPagina.AtributosColumnas) Reorderable=@CustomizadorController.ObtenerPropiedadColumnaMovible("ReadBufferSize",dataCustomizacionPagina.AtributosColumnas) MinWidth=@CustomizadorController.ObtenerPropiedadAnchoMinimoColumnaEnGrilla("ReadBufferSize",dataCustomizacionPagina.AtributosColumnas) Width=@CustomizadorController.ObtenerPropiedadAnchoColumnaEnGrilla("ReadBufferSize",dataCustomizacionPagina.AtributosColumnas) Pickable=@CustomizadorController.ObtenerPropiedadVisibilidadColumnaEnSelector("ReadBufferSize",dataCustomizacionPagina.AtributosColumnas) OrderIndex=@CustomizadorController.ObtenerPropiedadPosicionColumnaEnGrilla("ReadBufferSize",dataCustomizacionPagina.AtributosColumnas) Sortable=@CustomizadorController.ObtenerPropiedadColumnaOrdenable("ReadBufferSize",dataCustomizacionPagina.AtributosColumnas) Visible=@CustomizadorController.ObtenerPropiedadVisibilidadColumna("ReadBufferSize",dataCustomizacionPagina.AtributosColumnas)>
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn TItem="Depositary.Entities.Tables.Dispositivo.DepositarioPlaca" Property="StopBits" Title=@MultilenguajeController.ObtenerTextoPorClave("STOPBITS",dataLenguaje) Frozen="false" TextAlign="TextAlign.Center"
                              Filterable=@CustomizadorController.ObtenerPropiedadColumnaFiltrable("StopBits",dataCustomizacionPagina.AtributosColumnas) Groupable=@CustomizadorController.ObtenerPropiedadColumnaAgrupable("StopBits",dataCustomizacionPagina.AtributosColumnas) Resizable=@CustomizadorController.ObtenerPropiedadColumnaRedimensionable("StopBits",dataCustomizacionPagina.AtributosColumnas) Reorderable=@CustomizadorController.ObtenerPropiedadColumnaMovible("StopBits",dataCustomizacionPagina.AtributosColumnas) MinWidth=@CustomizadorController.ObtenerPropiedadAnchoMinimoColumnaEnGrilla("StopBits",dataCustomizacionPagina.AtributosColumnas) Width=@CustomizadorController.ObtenerPropiedadAnchoColumnaEnGrilla("StopBits",dataCustomizacionPagina.AtributosColumnas) Pickable=@CustomizadorController.ObtenerPropiedadVisibilidadColumnaEnSelector("StopBits",dataCustomizacionPagina.AtributosColumnas) OrderIndex=@CustomizadorController.ObtenerPropiedadPosicionColumnaEnGrilla("StopBits",dataCustomizacionPagina.AtributosColumnas) Sortable=@CustomizadorController.ObtenerPropiedadColumnaOrdenable("StopBits",dataCustomizacionPagina.AtributosColumnas) Visible=@CustomizadorController.ObtenerPropiedadVisibilidadColumna("StopBits",dataCustomizacionPagina.AtributosColumnas)>
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn TItem="Depositary.Entities.Tables.Dispositivo.DepositarioPlaca" Property="ReadTimeout" Title=@MultilenguajeController.ObtenerTextoPorClave("READTIMEOUT",dataLenguaje) Frozen="false" TextAlign="TextAlign.Center"
                              Filterable=@CustomizadorController.ObtenerPropiedadColumnaFiltrable("ReadTimeout",dataCustomizacionPagina.AtributosColumnas) Groupable=@CustomizadorController.ObtenerPropiedadColumnaAgrupable("ReadTimeout",dataCustomizacionPagina.AtributosColumnas) Resizable=@CustomizadorController.ObtenerPropiedadColumnaRedimensionable("ReadTimeout",dataCustomizacionPagina.AtributosColumnas) Reorderable=@CustomizadorController.ObtenerPropiedadColumnaMovible("ReadTimeout",dataCustomizacionPagina.AtributosColumnas) MinWidth=@CustomizadorController.ObtenerPropiedadAnchoMinimoColumnaEnGrilla("ReadTimeout",dataCustomizacionPagina.AtributosColumnas) Width=@CustomizadorController.ObtenerPropiedadAnchoColumnaEnGrilla("ReadTimeout",dataCustomizacionPagina.AtributosColumnas) Pickable=@CustomizadorController.ObtenerPropiedadVisibilidadColumnaEnSelector("ReadTimeout",dataCustomizacionPagina.AtributosColumnas) OrderIndex=@CustomizadorController.ObtenerPropiedadPosicionColumnaEnGrilla("ReadTimeout",dataCustomizacionPagina.AtributosColumnas) Sortable=@CustomizadorController.ObtenerPropiedadColumnaOrdenable("ReadTimeout",dataCustomizacionPagina.AtributosColumnas) Visible=@CustomizadorController.ObtenerPropiedadVisibilidadColumna("ReadTimeout",dataCustomizacionPagina.AtributosColumnas)>
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn TItem="Depositary.Entities.Tables.Dispositivo.DepositarioPlaca" Property="Handshake" Title=@MultilenguajeController.ObtenerTextoPorClave("HANDSHAKE",dataLenguaje) Frozen="false" TextAlign="TextAlign.Center"
                              Filterable=@CustomizadorController.ObtenerPropiedadColumnaFiltrable("Handshake",dataCustomizacionPagina.AtributosColumnas) Groupable=@CustomizadorController.ObtenerPropiedadColumnaAgrupable("Handshake",dataCustomizacionPagina.AtributosColumnas) Resizable=@CustomizadorController.ObtenerPropiedadColumnaRedimensionable("Handshake",dataCustomizacionPagina.AtributosColumnas) Reorderable=@CustomizadorController.ObtenerPropiedadColumnaMovible("Handshake",dataCustomizacionPagina.AtributosColumnas) MinWidth=@CustomizadorController.ObtenerPropiedadAnchoMinimoColumnaEnGrilla("Handshake",dataCustomizacionPagina.AtributosColumnas) Width=@CustomizadorController.ObtenerPropiedadAnchoColumnaEnGrilla("Handshake",dataCustomizacionPagina.AtributosColumnas) Pickable=@CustomizadorController.ObtenerPropiedadVisibilidadColumnaEnSelector("Handshake",dataCustomizacionPagina.AtributosColumnas) OrderIndex=@CustomizadorController.ObtenerPropiedadPosicionColumnaEnGrilla("Handshake",dataCustomizacionPagina.AtributosColumnas) Sortable=@CustomizadorController.ObtenerPropiedadColumnaOrdenable("Handshake",dataCustomizacionPagina.AtributosColumnas) Visible=@CustomizadorController.ObtenerPropiedadVisibilidadColumna("Handshake",dataCustomizacionPagina.AtributosColumnas)>
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn TItem="Depositary.Entities.Tables.Dispositivo.DepositarioPlaca" Property="BaudRate" Title=@MultilenguajeController.ObtenerTextoPorClave("BAUDRATE",dataLenguaje) Frozen="false" TextAlign="TextAlign.Center"
                              Filterable=@CustomizadorController.ObtenerPropiedadColumnaFiltrable("BaudRate",dataCustomizacionPagina.AtributosColumnas) Groupable=@CustomizadorController.ObtenerPropiedadColumnaAgrupable("BaudRate",dataCustomizacionPagina.AtributosColumnas) Resizable=@CustomizadorController.ObtenerPropiedadColumnaRedimensionable("BaudRate",dataCustomizacionPagina.AtributosColumnas) Reorderable=@CustomizadorController.ObtenerPropiedadColumnaMovible("BaudRate",dataCustomizacionPagina.AtributosColumnas) MinWidth=@CustomizadorController.ObtenerPropiedadAnchoMinimoColumnaEnGrilla("BaudRate",dataCustomizacionPagina.AtributosColumnas) Width=@CustomizadorController.ObtenerPropiedadAnchoColumnaEnGrilla("BaudRate",dataCustomizacionPagina.AtributosColumnas) Pickable=@CustomizadorController.ObtenerPropiedadVisibilidadColumnaEnSelector("BaudRate",dataCustomizacionPagina.AtributosColumnas) OrderIndex=@CustomizadorController.ObtenerPropiedadPosicionColumnaEnGrilla("BaudRate",dataCustomizacionPagina.AtributosColumnas) Sortable=@CustomizadorController.ObtenerPropiedadColumnaOrdenable("BaudRate",dataCustomizacionPagina.AtributosColumnas) Visible=@CustomizadorController.ObtenerPropiedadVisibilidadColumna("BaudRate",dataCustomizacionPagina.AtributosColumnas)>
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn TItem="Depositary.Entities.Tables.Dispositivo.DepositarioPlaca" Property="RtsEnable" Title=@MultilenguajeController.ObtenerTextoPorClave("RTSENABLE",dataLenguaje) Frozen="false" TextAlign="TextAlign.Center"
                              Filterable=@CustomizadorController.ObtenerPropiedadColumnaFiltrable("RtsEnable",dataCustomizacionPagina.AtributosColumnas) Groupable=@CustomizadorController.ObtenerPropiedadColumnaAgrupable("RtsEnable",dataCustomizacionPagina.AtributosColumnas) Resizable=@CustomizadorController.ObtenerPropiedadColumnaRedimensionable("RtsEnable",dataCustomizacionPagina.AtributosColumnas) Reorderable=@CustomizadorController.ObtenerPropiedadColumnaMovible("RtsEnable",dataCustomizacionPagina.AtributosColumnas) MinWidth=@CustomizadorController.ObtenerPropiedadAnchoMinimoColumnaEnGrilla("RtsEnable",dataCustomizacionPagina.AtributosColumnas) Width=@CustomizadorController.ObtenerPropiedadAnchoColumnaEnGrilla("RtsEnable",dataCustomizacionPagina.AtributosColumnas) Pickable=@CustomizadorController.ObtenerPropiedadVisibilidadColumnaEnSelector("RtsEnable",dataCustomizacionPagina.AtributosColumnas) OrderIndex=@CustomizadorController.ObtenerPropiedadPosicionColumnaEnGrilla("RtsEnable",dataCustomizacionPagina.AtributosColumnas) Sortable=@CustomizadorController.ObtenerPropiedadColumnaOrdenable("RtsEnable",dataCustomizacionPagina.AtributosColumnas) Visible=@CustomizadorController.ObtenerPropiedadVisibilidadColumna("RtsEnable",dataCustomizacionPagina.AtributosColumnas)>
                        <Template Context="data">
                            <RadzenCheckBox TValue="bool" Value=@data.RtsEnable Disabled="true">
                            </RadzenCheckBox>
                        </Template>
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn TItem="Depositary.Entities.Tables.Dispositivo.DepositarioPlaca" Property="SensorA" Title=@MultilenguajeController.ObtenerTextoPorClave("SENSORA",dataLenguaje) Frozen="false" TextAlign="TextAlign.Center"
                              Filterable=@CustomizadorController.ObtenerPropiedadColumnaFiltrable("SensorA",dataCustomizacionPagina.AtributosColumnas) Groupable=@CustomizadorController.ObtenerPropiedadColumnaAgrupable("SensorA",dataCustomizacionPagina.AtributosColumnas) Resizable=@CustomizadorController.ObtenerPropiedadColumnaRedimensionable("SensorA",dataCustomizacionPagina.AtributosColumnas) Reorderable=@CustomizadorController.ObtenerPropiedadColumnaMovible("SensorA",dataCustomizacionPagina.AtributosColumnas) MinWidth=@CustomizadorController.ObtenerPropiedadAnchoMinimoColumnaEnGrilla("SensorA",dataCustomizacionPagina.AtributosColumnas) Width=@CustomizadorController.ObtenerPropiedadAnchoColumnaEnGrilla("SensorA",dataCustomizacionPagina.AtributosColumnas) Pickable=@CustomizadorController.ObtenerPropiedadVisibilidadColumnaEnSelector("SensorA",dataCustomizacionPagina.AtributosColumnas) OrderIndex=@CustomizadorController.ObtenerPropiedadPosicionColumnaEnGrilla("SensorA",dataCustomizacionPagina.AtributosColumnas) Sortable=@CustomizadorController.ObtenerPropiedadColumnaOrdenable("SensorA",dataCustomizacionPagina.AtributosColumnas) Visible=@CustomizadorController.ObtenerPropiedadVisibilidadColumna("SensorA",dataCustomizacionPagina.AtributosColumnas)>
                        <Template Context="data">
                            <RadzenCheckBox TValue="bool" Value=@data.SensorA Disabled="true">
                            </RadzenCheckBox>
                        </Template>
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn TItem="Depositary.Entities.Tables.Dispositivo.DepositarioPlaca" Property="BitSensorA" Title=@MultilenguajeController.ObtenerTextoPorClave("BITSENSORA",dataLenguaje) Frozen="false" TextAlign="TextAlign.Center"
                              Filterable=@CustomizadorController.ObtenerPropiedadColumnaFiltrable("BitSensorA",dataCustomizacionPagina.AtributosColumnas) Groupable=@CustomizadorController.ObtenerPropiedadColumnaAgrupable("BitSensorA",dataCustomizacionPagina.AtributosColumnas) Resizable=@CustomizadorController.ObtenerPropiedadColumnaRedimensionable("BitSensorA",dataCustomizacionPagina.AtributosColumnas) Reorderable=@CustomizadorController.ObtenerPropiedadColumnaMovible("BitSensorA",dataCustomizacionPagina.AtributosColumnas) MinWidth=@CustomizadorController.ObtenerPropiedadAnchoMinimoColumnaEnGrilla("BitSensorA",dataCustomizacionPagina.AtributosColumnas) Width=@CustomizadorController.ObtenerPropiedadAnchoColumnaEnGrilla("BitSensorA",dataCustomizacionPagina.AtributosColumnas) Pickable=@CustomizadorController.ObtenerPropiedadVisibilidadColumnaEnSelector("BitSensorA",dataCustomizacionPagina.AtributosColumnas) OrderIndex=@CustomizadorController.ObtenerPropiedadPosicionColumnaEnGrilla("BitSensorA",dataCustomizacionPagina.AtributosColumnas) Sortable=@CustomizadorController.ObtenerPropiedadColumnaOrdenable("BitSensorA",dataCustomizacionPagina.AtributosColumnas) Visible=@CustomizadorController.ObtenerPropiedadVisibilidadColumna("BitSensorA",dataCustomizacionPagina.AtributosColumnas)>
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn TItem="Depositary.Entities.Tables.Dispositivo.DepositarioPlaca" Property="SensorB" Title=@MultilenguajeController.ObtenerTextoPorClave("SENSORB",dataLenguaje) Frozen="false" TextAlign="TextAlign.Center"
                              Filterable=@CustomizadorController.ObtenerPropiedadColumnaFiltrable("SensorB",dataCustomizacionPagina.AtributosColumnas) Groupable=@CustomizadorController.ObtenerPropiedadColumnaAgrupable("SensorB",dataCustomizacionPagina.AtributosColumnas) Resizable=@CustomizadorController.ObtenerPropiedadColumnaRedimensionable("SensorB",dataCustomizacionPagina.AtributosColumnas) Reorderable=@CustomizadorController.ObtenerPropiedadColumnaMovible("SensorB",dataCustomizacionPagina.AtributosColumnas) MinWidth=@CustomizadorController.ObtenerPropiedadAnchoMinimoColumnaEnGrilla("SensorB",dataCustomizacionPagina.AtributosColumnas) Width=@CustomizadorController.ObtenerPropiedadAnchoColumnaEnGrilla("SensorB",dataCustomizacionPagina.AtributosColumnas) Pickable=@CustomizadorController.ObtenerPropiedadVisibilidadColumnaEnSelector("SensorB",dataCustomizacionPagina.AtributosColumnas) OrderIndex=@CustomizadorController.ObtenerPropiedadPosicionColumnaEnGrilla("SensorB",dataCustomizacionPagina.AtributosColumnas) Sortable=@CustomizadorController.ObtenerPropiedadColumnaOrdenable("SensorB",dataCustomizacionPagina.AtributosColumnas) Visible=@CustomizadorController.ObtenerPropiedadVisibilidadColumna("SensorB",dataCustomizacionPagina.AtributosColumnas)>
                        <Template Context="data">
                            <RadzenCheckBox TValue="bool" Value=@data.SensorB Disabled="true">
                            </RadzenCheckBox>
                        </Template>
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn TItem="Depositary.Entities.Tables.Dispositivo.DepositarioPlaca" Property="BitSensorB" Title=@MultilenguajeController.ObtenerTextoPorClave("BITSENSORB",dataLenguaje) Frozen="false" TextAlign="TextAlign.Center"
                              Filterable=@CustomizadorController.ObtenerPropiedadColumnaFiltrable("BitSensorB",dataCustomizacionPagina.AtributosColumnas) Groupable=@CustomizadorController.ObtenerPropiedadColumnaAgrupable("BitSensorB",dataCustomizacionPagina.AtributosColumnas) Resizable=@CustomizadorController.ObtenerPropiedadColumnaRedimensionable("BitSensorB",dataCustomizacionPagina.AtributosColumnas) Reorderable=@CustomizadorController.ObtenerPropiedadColumnaMovible("BitSensorB",dataCustomizacionPagina.AtributosColumnas) MinWidth=@CustomizadorController.ObtenerPropiedadAnchoMinimoColumnaEnGrilla("BitSensorB",dataCustomizacionPagina.AtributosColumnas) Width=@CustomizadorController.ObtenerPropiedadAnchoColumnaEnGrilla("BitSensorB",dataCustomizacionPagina.AtributosColumnas) Pickable=@CustomizadorController.ObtenerPropiedadVisibilidadColumnaEnSelector("BitSensorB",dataCustomizacionPagina.AtributosColumnas) OrderIndex=@CustomizadorController.ObtenerPropiedadPosicionColumnaEnGrilla("BitSensorB",dataCustomizacionPagina.AtributosColumnas) Sortable=@CustomizadorController.ObtenerPropiedadColumnaOrdenable("BitSensorB",dataCustomizacionPagina.AtributosColumnas) Visible=@CustomizadorController.ObtenerPropiedadVisibilidadColumna("BitSensorB",dataCustomizacionPagina.AtributosColumnas)>
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn TItem="Depositary.Entities.Tables.Dispositivo.DepositarioPlaca" Property="SensorC" Title=@MultilenguajeController.ObtenerTextoPorClave("SENSORC",dataLenguaje) Frozen="false" TextAlign="TextAlign.Center"
                              Filterable=@CustomizadorController.ObtenerPropiedadColumnaFiltrable("SensorC",dataCustomizacionPagina.AtributosColumnas) Groupable=@CustomizadorController.ObtenerPropiedadColumnaAgrupable("SensorC",dataCustomizacionPagina.AtributosColumnas) Resizable=@CustomizadorController.ObtenerPropiedadColumnaRedimensionable("SensorC",dataCustomizacionPagina.AtributosColumnas) Reorderable=@CustomizadorController.ObtenerPropiedadColumnaMovible("SensorC",dataCustomizacionPagina.AtributosColumnas) MinWidth=@CustomizadorController.ObtenerPropiedadAnchoMinimoColumnaEnGrilla("SensorC",dataCustomizacionPagina.AtributosColumnas) Width=@CustomizadorController.ObtenerPropiedadAnchoColumnaEnGrilla("SensorC",dataCustomizacionPagina.AtributosColumnas) Pickable=@CustomizadorController.ObtenerPropiedadVisibilidadColumnaEnSelector("SensorC",dataCustomizacionPagina.AtributosColumnas) OrderIndex=@CustomizadorController.ObtenerPropiedadPosicionColumnaEnGrilla("SensorC",dataCustomizacionPagina.AtributosColumnas) Sortable=@CustomizadorController.ObtenerPropiedadColumnaOrdenable("SensorC",dataCustomizacionPagina.AtributosColumnas) Visible=@CustomizadorController.ObtenerPropiedadVisibilidadColumna("SensorC",dataCustomizacionPagina.AtributosColumnas)>
                        <Template Context="data">
                            <RadzenCheckBox TValue="bool" Value=@data.SensorC Disabled="true">
                            </RadzenCheckBox>
                        </Template>
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn TItem="Depositary.Entities.Tables.Dispositivo.DepositarioPlaca" Property="BitSensorC" Title=@MultilenguajeController.ObtenerTextoPorClave("BITSENSORC",dataLenguaje) Frozen="false" TextAlign="TextAlign.Center"
                              Filterable=@CustomizadorController.ObtenerPropiedadColumnaFiltrable("BitSensorC",dataCustomizacionPagina.AtributosColumnas) Groupable=@CustomizadorController.ObtenerPropiedadColumnaAgrupable("BitSensorC",dataCustomizacionPagina.AtributosColumnas) Resizable=@CustomizadorController.ObtenerPropiedadColumnaRedimensionable("BitSensorC",dataCustomizacionPagina.AtributosColumnas) Reorderable=@CustomizadorController.ObtenerPropiedadColumnaMovible("BitSensorC",dataCustomizacionPagina.AtributosColumnas) MinWidth=@CustomizadorController.ObtenerPropiedadAnchoMinimoColumnaEnGrilla("BitSensorC",dataCustomizacionPagina.AtributosColumnas) Width=@CustomizadorController.ObtenerPropiedadAnchoColumnaEnGrilla("BitSensorC",dataCustomizacionPagina.AtributosColumnas) Pickable=@CustomizadorController.ObtenerPropiedadVisibilidadColumnaEnSelector("BitSensorC",dataCustomizacionPagina.AtributosColumnas) OrderIndex=@CustomizadorController.ObtenerPropiedadPosicionColumnaEnGrilla("BitSensorC",dataCustomizacionPagina.AtributosColumnas) Sortable=@CustomizadorController.ObtenerPropiedadColumnaOrdenable("BitSensorC",dataCustomizacionPagina.AtributosColumnas) Visible=@CustomizadorController.ObtenerPropiedadVisibilidadColumna("BitSensorC",dataCustomizacionPagina.AtributosColumnas)>
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn TItem="Depositary.Entities.Tables.Dispositivo.DepositarioPlaca" Property="SensorD" Title=@MultilenguajeController.ObtenerTextoPorClave("SENSORD",dataLenguaje) Frozen="false" TextAlign="TextAlign.Center"
                              Filterable=@CustomizadorController.ObtenerPropiedadColumnaFiltrable("SensorD",dataCustomizacionPagina.AtributosColumnas) Groupable=@CustomizadorController.ObtenerPropiedadColumnaAgrupable("SensorD",dataCustomizacionPagina.AtributosColumnas) Resizable=@CustomizadorController.ObtenerPropiedadColumnaRedimensionable("SensorD",dataCustomizacionPagina.AtributosColumnas) Reorderable=@CustomizadorController.ObtenerPropiedadColumnaMovible("SensorD",dataCustomizacionPagina.AtributosColumnas) MinWidth=@CustomizadorController.ObtenerPropiedadAnchoMinimoColumnaEnGrilla("SensorD",dataCustomizacionPagina.AtributosColumnas) Width=@CustomizadorController.ObtenerPropiedadAnchoColumnaEnGrilla("SensorD",dataCustomizacionPagina.AtributosColumnas) Pickable=@CustomizadorController.ObtenerPropiedadVisibilidadColumnaEnSelector("SensorD",dataCustomizacionPagina.AtributosColumnas) OrderIndex=@CustomizadorController.ObtenerPropiedadPosicionColumnaEnGrilla("SensorD",dataCustomizacionPagina.AtributosColumnas) Sortable=@CustomizadorController.ObtenerPropiedadColumnaOrdenable("SensorD",dataCustomizacionPagina.AtributosColumnas) Visible=@CustomizadorController.ObtenerPropiedadVisibilidadColumna("SensorD",dataCustomizacionPagina.AtributosColumnas)>
                        <Template Context="data">
                            <RadzenCheckBox TValue="bool" Value=@data.SensorD Disabled="true">
                            </RadzenCheckBox>
                        </Template>
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn TItem="Depositary.Entities.Tables.Dispositivo.DepositarioPlaca" Property="BitSensorD" Title=@MultilenguajeController.ObtenerTextoPorClave("BITSENSORD",dataLenguaje) Frozen="false" TextAlign="TextAlign.Center"
                              Filterable=@CustomizadorController.ObtenerPropiedadColumnaFiltrable("BitSensorD",dataCustomizacionPagina.AtributosColumnas) Groupable=@CustomizadorController.ObtenerPropiedadColumnaAgrupable("BitSensorD",dataCustomizacionPagina.AtributosColumnas) Resizable=@CustomizadorController.ObtenerPropiedadColumnaRedimensionable("BitSensorD",dataCustomizacionPagina.AtributosColumnas) Reorderable=@CustomizadorController.ObtenerPropiedadColumnaMovible("BitSensorD",dataCustomizacionPagina.AtributosColumnas) MinWidth=@CustomizadorController.ObtenerPropiedadAnchoMinimoColumnaEnGrilla("BitSensorD",dataCustomizacionPagina.AtributosColumnas) Width=@CustomizadorController.ObtenerPropiedadAnchoColumnaEnGrilla("BitSensorD",dataCustomizacionPagina.AtributosColumnas) Pickable=@CustomizadorController.ObtenerPropiedadVisibilidadColumnaEnSelector("BitSensorD",dataCustomizacionPagina.AtributosColumnas) OrderIndex=@CustomizadorController.ObtenerPropiedadPosicionColumnaEnGrilla("BitSensorD",dataCustomizacionPagina.AtributosColumnas) Sortable=@CustomizadorController.ObtenerPropiedadColumnaOrdenable("BitSensorD",dataCustomizacionPagina.AtributosColumnas) Visible=@CustomizadorController.ObtenerPropiedadVisibilidadColumna("BitSensorD",dataCustomizacionPagina.AtributosColumnas)>
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn TItem="Depositary.Entities.Tables.Dispositivo.DepositarioPlaca" Property="SensorL" Title=@MultilenguajeController.ObtenerTextoPorClave("SENSORL",dataLenguaje) Frozen="false" TextAlign="TextAlign.Center"
                              Filterable=@CustomizadorController.ObtenerPropiedadColumnaFiltrable("SensorL",dataCustomizacionPagina.AtributosColumnas) Groupable=@CustomizadorController.ObtenerPropiedadColumnaAgrupable("SensorL",dataCustomizacionPagina.AtributosColumnas) Resizable=@CustomizadorController.ObtenerPropiedadColumnaRedimensionable("SensorL",dataCustomizacionPagina.AtributosColumnas) Reorderable=@CustomizadorController.ObtenerPropiedadColumnaMovible("SensorL",dataCustomizacionPagina.AtributosColumnas) MinWidth=@CustomizadorController.ObtenerPropiedadAnchoMinimoColumnaEnGrilla("SensorL",dataCustomizacionPagina.AtributosColumnas) Width=@CustomizadorController.ObtenerPropiedadAnchoColumnaEnGrilla("SensorL",dataCustomizacionPagina.AtributosColumnas) Pickable=@CustomizadorController.ObtenerPropiedadVisibilidadColumnaEnSelector("SensorL",dataCustomizacionPagina.AtributosColumnas) OrderIndex=@CustomizadorController.ObtenerPropiedadPosicionColumnaEnGrilla("SensorL",dataCustomizacionPagina.AtributosColumnas) Sortable=@CustomizadorController.ObtenerPropiedadColumnaOrdenable("SensorL",dataCustomizacionPagina.AtributosColumnas) Visible=@CustomizadorController.ObtenerPropiedadVisibilidadColumna("SensorL",dataCustomizacionPagina.AtributosColumnas)>
                        <Template Context="data">
                            <RadzenCheckBox TValue="bool" Value=@data.SensorL Disabled="true">
                            </RadzenCheckBox>
                        </Template>
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn TItem="Depositary.Entities.Tables.Dispositivo.DepositarioPlaca" Property="BitSensorL" Title=@MultilenguajeController.ObtenerTextoPorClave("BITSENSORL",dataLenguaje) Frozen="false" TextAlign="TextAlign.Center"
                              Filterable=@CustomizadorController.ObtenerPropiedadColumnaFiltrable("BitSensorL",dataCustomizacionPagina.AtributosColumnas) Groupable=@CustomizadorController.ObtenerPropiedadColumnaAgrupable("BitSensorL",dataCustomizacionPagina.AtributosColumnas) Resizable=@CustomizadorController.ObtenerPropiedadColumnaRedimensionable("BitSensorL",dataCustomizacionPagina.AtributosColumnas) Reorderable=@CustomizadorController.ObtenerPropiedadColumnaMovible("BitSensorL",dataCustomizacionPagina.AtributosColumnas) MinWidth=@CustomizadorController.ObtenerPropiedadAnchoMinimoColumnaEnGrilla("BitSensorL",dataCustomizacionPagina.AtributosColumnas) Width=@CustomizadorController.ObtenerPropiedadAnchoColumnaEnGrilla("BitSensorL",dataCustomizacionPagina.AtributosColumnas) Pickable=@CustomizadorController.ObtenerPropiedadVisibilidadColumnaEnSelector("BitSensorL",dataCustomizacionPagina.AtributosColumnas) OrderIndex=@CustomizadorController.ObtenerPropiedadPosicionColumnaEnGrilla("BitSensorL",dataCustomizacionPagina.AtributosColumnas) Sortable=@CustomizadorController.ObtenerPropiedadColumnaOrdenable("BitSensorL",dataCustomizacionPagina.AtributosColumnas) Visible=@CustomizadorController.ObtenerPropiedadVisibilidadColumna("BitSensorL",dataCustomizacionPagina.AtributosColumnas)>
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn TItem="Depositary.Entities.Tables.Dispositivo.DepositarioPlaca" Property="PollTime" Filterable=@CustomizadorController.ObtenerPropiedadColumnaFiltrable("PollTime",dataCustomizacionPagina.AtributosColumnas) Groupable=@CustomizadorController.ObtenerPropiedadColumnaAgrupable("PollTime",dataCustomizacionPagina.AtributosColumnas) Resizable=@CustomizadorController.ObtenerPropiedadColumnaRedimensionable("PollTime",dataCustomizacionPagina.AtributosColumnas) Reorderable=@CustomizadorController.ObtenerPropiedadColumnaMovible("PollTime",dataCustomizacionPagina.AtributosColumnas) MinWidth=@CustomizadorController.ObtenerPropiedadAnchoMinimoColumnaEnGrilla("PollTime",dataCustomizacionPagina.AtributosColumnas) Width=@CustomizadorController.ObtenerPropiedadAnchoColumnaEnGrilla("PollTime",dataCustomizacionPagina.AtributosColumnas) Pickable=@CustomizadorController.ObtenerPropiedadVisibilidadColumnaEnSelector("PollTime",dataCustomizacionPagina.AtributosColumnas) OrderIndex=@CustomizadorController.ObtenerPropiedadPosicionColumnaEnGrilla("PollTime",dataCustomizacionPagina.AtributosColumnas) Sortable=@CustomizadorController.ObtenerPropiedadColumnaOrdenable("PollTime",dataCustomizacionPagina.AtributosColumnas) Visible=@CustomizadorController.ObtenerPropiedadVisibilidadColumna("PollTime",dataCustomizacionPagina.AtributosColumnas) Title=@MultilenguajeController.ObtenerTextoPorClave("POLLTIME",dataLenguaje) Frozen="false" TextAlign="TextAlign.Center">
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn TItem="Depositary.Entities.Tables.Dispositivo.DepositarioPlaca" Property="Sleeptime" Filterable=@CustomizadorController.ObtenerPropiedadColumnaFiltrable("Sleeptime",dataCustomizacionPagina.AtributosColumnas) Groupable=@CustomizadorController.ObtenerPropiedadColumnaAgrupable("Sleeptime",dataCustomizacionPagina.AtributosColumnas) Resizable=@CustomizadorController.ObtenerPropiedadColumnaRedimensionable("Sleeptime",dataCustomizacionPagina.AtributosColumnas) Reorderable=@CustomizadorController.ObtenerPropiedadColumnaMovible("Sleeptime",dataCustomizacionPagina.AtributosColumnas) MinWidth=@CustomizadorController.ObtenerPropiedadAnchoMinimoColumnaEnGrilla("Sleeptime",dataCustomizacionPagina.AtributosColumnas) Width=@CustomizadorController.ObtenerPropiedadAnchoColumnaEnGrilla("Sleeptime",dataCustomizacionPagina.AtributosColumnas) Pickable=@CustomizadorController.ObtenerPropiedadVisibilidadColumnaEnSelector("Sleeptime",dataCustomizacionPagina.AtributosColumnas) OrderIndex=@CustomizadorController.ObtenerPropiedadPosicionColumnaEnGrilla("Sleeptime",dataCustomizacionPagina.AtributosColumnas) Sortable=@CustomizadorController.ObtenerPropiedadColumnaOrdenable("Sleeptime",dataCustomizacionPagina.AtributosColumnas) Visible=@CustomizadorController.ObtenerPropiedadVisibilidadColumna("Sleeptime",dataCustomizacionPagina.AtributosColumnas) Title=@MultilenguajeController.ObtenerTextoPorClave("SLEEPTIME",dataLenguaje) Frozen="false" TextAlign="TextAlign.Center">
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn TItem="Depositary.Entities.Tables.Dispositivo.DepositarioPlaca" Property="Habilitado" FilterValue="@Habilitado_filter" Filterable=@CustomizadorController.ObtenerPropiedadColumnaFiltrable("Habilitado",dataCustomizacionPagina.AtributosColumnas) Groupable=@CustomizadorController.ObtenerPropiedadColumnaAgrupable("Habilitado",dataCustomizacionPagina.AtributosColumnas) Resizable=@CustomizadorController.ObtenerPropiedadColumnaRedimensionable("Habilitado",dataCustomizacionPagina.AtributosColumnas) Reorderable=@CustomizadorController.ObtenerPropiedadColumnaMovible("Habilitado",dataCustomizacionPagina.AtributosColumnas) MinWidth=@CustomizadorController.ObtenerPropiedadAnchoMinimoColumnaEnGrilla("Habilitado",dataCustomizacionPagina.AtributosColumnas) Width=@CustomizadorController.ObtenerPropiedadAnchoColumnaEnGrilla("Habilitado",dataCustomizacionPagina.AtributosColumnas) Pickable=@CustomizadorController.ObtenerPropiedadVisibilidadColumnaEnSelector("Habilitado",dataCustomizacionPagina.AtributosColumnas) OrderIndex=@CustomizadorController.ObtenerPropiedadPosicionColumnaEnGrilla("Habilitado",dataCustomizacionPagina.AtributosColumnas) Sortable=@CustomizadorController.ObtenerPropiedadColumnaOrdenable("Habilitado",dataCustomizacionPagina.AtributosColumnas) Visible=@CustomizadorController.ObtenerPropiedadVisibilidadColumna("Habilitado",dataCustomizacionPagina.AtributosColumnas) Title=@MultilenguajeController.ObtenerTextoPorClave("HABILITADO",dataLenguaje) Frozen="false" TextAlign="TextAlign.Center">
                        <Template Context="data">
                            <RadzenCheckBox TValue="bool" Value=@data.Habilitado Disabled="true">
                            </RadzenCheckBox>
                        </Template>
                        <FilterTemplate>
                            <div style="margin-top: 1rem;font-weight: 600">Filter</div>
                            <div>
                                @MultilenguajeController.ObtenerTextoPorClave("HABILITADO",dataLenguaje)
                                <RadzenCheckBox Style="margin-bottom: 2%;" @bind-Value="Habilitado_filter" TriState="true" />
                            </div>
                        </FilterTemplate>
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn TItem="Depositary.Entities.Tables.Dispositivo.DepositarioPlaca" Filterable=@CustomizadorController.ObtenerPropiedadColumnaFiltrable("UsuarioCreacion",dataCustomizacionPagina.AtributosColumnas) Groupable=@CustomizadorController.ObtenerPropiedadColumnaAgrupable("UsuarioCreacion",dataCustomizacionPagina.AtributosColumnas) Resizable=@CustomizadorController.ObtenerPropiedadColumnaRedimensionable("UsuarioCreacion",dataCustomizacionPagina.AtributosColumnas) Reorderable=@CustomizadorController.ObtenerPropiedadColumnaMovible("UsuarioCreacion",dataCustomizacionPagina.AtributosColumnas) MinWidth=@CustomizadorController.ObtenerPropiedadAnchoMinimoColumnaEnGrilla("UsuarioCreacion",dataCustomizacionPagina.AtributosColumnas) Width=@CustomizadorController.ObtenerPropiedadAnchoColumnaEnGrilla("UsuarioCreacion",dataCustomizacionPagina.AtributosColumnas) Pickable=@CustomizadorController.ObtenerPropiedadVisibilidadColumnaEnSelector("UsuarioCreacion",dataCustomizacionPagina.AtributosColumnas) OrderIndex=@CustomizadorController.ObtenerPropiedadPosicionColumnaEnGrilla("UsuarioCreacion",dataCustomizacionPagina.AtributosColumnas) Sortable=@CustomizadorController.ObtenerPropiedadColumnaOrdenable("UsuarioCreacion",dataCustomizacionPagina.AtributosColumnas) Visible=@CustomizadorController.ObtenerPropiedadVisibilidadColumna("UsuarioCreacion",dataCustomizacionPagina.AtributosColumnas) Title=@MultilenguajeController.ObtenerTextoPorClave("USUARIOCREACION",dataLenguaje) Property="UsuarioCreacion" Type="typeof(IEnumerable<Int64>)" FilterValue="@selectedFilter_UsuarioCreacion" FilterOperator="FilterOperator.Contains" LogicalFilterOperator="LogicalFilterOperator.And">
                        <Template>
                            @{
                                var usuario = Usuario_UsuarioCreacion_entities.FirstOrDefault(c => c.Id == @context.UsuarioCreacion);
                                if (usuario != null)
                                {
                                    <RadzenLabel Text=@(usuario.NombreApellido) Component="UsuarioCreacion" style="width: 100%">
                                    </RadzenLabel>
                                }
                                else
                                {
                                    <RadzenLabel Text="No data available" Component="UsuarioCreacion" style="width: 100%">
                                    </RadzenLabel>
                                }
                            }
                        </Template>
                        <FilterTemplate>
                            <div style="margin-top: 1rem;font-weight: 600">Filter</div>
                            <RadzenDropDown @bind-Value=@selectedFilter_UsuarioCreacion Data="@Usuario_UsuarioCreacion_filter" Change="OnSelectedFilter_UsuarioCreacion_Changed" AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" ValueProperty="Id" TextProperty="NombreApellido" AllowClear="true" Multiple="true" />
                        </FilterTemplate>
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn TItem="Depositary.Entities.Tables.Dispositivo.DepositarioPlaca" Property="FechaCreacion" Filterable=@CustomizadorController.ObtenerPropiedadColumnaFiltrable("FechaCreacion",dataCustomizacionPagina.AtributosColumnas) Groupable=@CustomizadorController.ObtenerPropiedadColumnaAgrupable("FechaCreacion",dataCustomizacionPagina.AtributosColumnas) Resizable=@CustomizadorController.ObtenerPropiedadColumnaRedimensionable("FechaCreacion",dataCustomizacionPagina.AtributosColumnas) Reorderable=@CustomizadorController.ObtenerPropiedadColumnaMovible("FechaCreacion",dataCustomizacionPagina.AtributosColumnas) MinWidth=@CustomizadorController.ObtenerPropiedadAnchoMinimoColumnaEnGrilla("FechaCreacion",dataCustomizacionPagina.AtributosColumnas) Width=@CustomizadorController.ObtenerPropiedadAnchoColumnaEnGrilla("FechaCreacion",dataCustomizacionPagina.AtributosColumnas) Pickable=@CustomizadorController.ObtenerPropiedadVisibilidadColumnaEnSelector("FechaCreacion",dataCustomizacionPagina.AtributosColumnas) OrderIndex=@CustomizadorController.ObtenerPropiedadPosicionColumnaEnGrilla("FechaCreacion",dataCustomizacionPagina.AtributosColumnas) Sortable=@CustomizadorController.ObtenerPropiedadColumnaOrdenable("FechaCreacion",dataCustomizacionPagina.AtributosColumnas) Visible=@CustomizadorController.ObtenerPropiedadVisibilidadColumna("FechaCreacion",dataCustomizacionPagina.AtributosColumnas) Title=@MultilenguajeController.ObtenerTextoPorClave("FECHACREACION",dataLenguaje) Frozen="false" TextAlign="TextAlign.Center">
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn TItem="Depositary.Entities.Tables.Dispositivo.DepositarioPlaca" Filterable=@CustomizadorController.ObtenerPropiedadColumnaFiltrable("UsuarioModificacion",dataCustomizacionPagina.AtributosColumnas) Groupable=@CustomizadorController.ObtenerPropiedadColumnaAgrupable("UsuarioModificacion",dataCustomizacionPagina.AtributosColumnas) Resizable=@CustomizadorController.ObtenerPropiedadColumnaRedimensionable("UsuarioModificacion",dataCustomizacionPagina.AtributosColumnas) Reorderable=@CustomizadorController.ObtenerPropiedadColumnaMovible("UsuarioModificacion",dataCustomizacionPagina.AtributosColumnas) MinWidth=@CustomizadorController.ObtenerPropiedadAnchoMinimoColumnaEnGrilla("UsuarioModificacion",dataCustomizacionPagina.AtributosColumnas) Width=@CustomizadorController.ObtenerPropiedadAnchoColumnaEnGrilla("UsuarioModificacion",dataCustomizacionPagina.AtributosColumnas) Pickable=@CustomizadorController.ObtenerPropiedadVisibilidadColumnaEnSelector("UsuarioModificacion",dataCustomizacionPagina.AtributosColumnas) OrderIndex=@CustomizadorController.ObtenerPropiedadPosicionColumnaEnGrilla("UsuarioModificacion",dataCustomizacionPagina.AtributosColumnas) Sortable=@CustomizadorController.ObtenerPropiedadColumnaOrdenable("UsuarioModificacion",dataCustomizacionPagina.AtributosColumnas) Visible=@CustomizadorController.ObtenerPropiedadVisibilidadColumna("UsuarioModificacion",dataCustomizacionPagina.AtributosColumnas) Title=@MultilenguajeController.ObtenerTextoPorClave("USUARIOMODIFICACION",dataLenguaje) Property="UsuarioModificacion" Type="typeof(IEnumerable<Int64>)" FilterValue="@selectedFilter_UsuarioModificacion" FilterOperator="FilterOperator.Contains" LogicalFilterOperator="LogicalFilterOperator.And">
                        <Template>
                            @{
                                var usuario = Usuario_UsuarioModificacion_entities.FirstOrDefault(c => c.Id == @context.UsuarioModificacion);
                                if (usuario != null)
                                {
                                    <RadzenLabel Text=@(usuario.NombreApellido) Component="UsuarioModificacion" style="width: 100%">
                                    </RadzenLabel>
                                }
                                else
                                {
                                    <RadzenLabel Text="No data available" Component="UsuarioModificacion" style="width: 100%">
                                    </RadzenLabel>
                                }
                            }
                        </Template>
                        <FilterTemplate>
                            <div style="margin-top: 1rem;font-weight: 600">Filter</div>
                            <RadzenDropDown @bind-Value=@selectedFilter_UsuarioModificacion Data="@Usuario_UsuarioModificacion_filter" Change="OnSelectedFilter_UsuarioModificacion_Changed" AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" ValueProperty="Id" TextProperty="NombreApellido" AllowClear="true" Multiple="true" />
                        </FilterTemplate>
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn TItem="Depositary.Entities.Tables.Dispositivo.DepositarioPlaca" Property="FechaModificacion" Filterable=@CustomizadorController.ObtenerPropiedadColumnaFiltrable("FechaModificacion",dataCustomizacionPagina.AtributosColumnas) Groupable=@CustomizadorController.ObtenerPropiedadColumnaAgrupable("FechaModificacion",dataCustomizacionPagina.AtributosColumnas) Resizable=@CustomizadorController.ObtenerPropiedadColumnaRedimensionable("FechaModificacion",dataCustomizacionPagina.AtributosColumnas) Reorderable=@CustomizadorController.ObtenerPropiedadColumnaMovible("FechaModificacion",dataCustomizacionPagina.AtributosColumnas) MinWidth=@CustomizadorController.ObtenerPropiedadAnchoMinimoColumnaEnGrilla("FechaModificacion",dataCustomizacionPagina.AtributosColumnas) Width=@CustomizadorController.ObtenerPropiedadAnchoColumnaEnGrilla("FechaModificacion",dataCustomizacionPagina.AtributosColumnas) Pickable=@CustomizadorController.ObtenerPropiedadVisibilidadColumnaEnSelector("FechaModificacion",dataCustomizacionPagina.AtributosColumnas) OrderIndex=@CustomizadorController.ObtenerPropiedadPosicionColumnaEnGrilla("FechaModificacion",dataCustomizacionPagina.AtributosColumnas) Sortable=@CustomizadorController.ObtenerPropiedadColumnaOrdenable("FechaModificacion",dataCustomizacionPagina.AtributosColumnas) Visible=@CustomizadorController.ObtenerPropiedadVisibilidadColumna("FechaModificacion",dataCustomizacionPagina.AtributosColumnas) Title=@MultilenguajeController.ObtenerTextoPorClave("FECHAMODIFICACION",dataLenguaje) Frozen="false" TextAlign="TextAlign.Center">
                    </RadzenDataGridColumn>
                </Columns>
            </RadzenDataGrid>
            <hr>
        }

        if (crudMode == CrudMode.Add || crudMode == CrudMode.Edit || crudMode == CrudMode.Delete)
        {
            <RadzenTemplateForm TItem="Depositary.Entities.Tables.Dispositivo.DepositarioPlaca" Data="@DepositarioPlaca_entity" @bind-Value="DepositarioPlaca_entity" Submit="Save" Visible="@(DepositarioPlaca_entity != null)">
                <ChildContent>

                    @if (crudMode != CrudMode.Add)
                    {
                        <div style="margin-bottom: 1rem" class="row">
                            <div class="col-md-3">
                                <RadzenLabel Text=@MultilenguajeController.ObtenerTextoPorClave("ID",dataLenguaje) Component="Id" style="width: 100%">
                                </RadzenLabel>
                            </div>
                            <div class="col-md-auto">
                                <RadzenNumeric TValue="long" style="display: block; width: 100%" @bind-Value="@(DepositarioPlaca_entity.Id)" Name="Id" Disabled="true">
                                </RadzenNumeric>
                            </div>
                        </div>
                    }
                    <div style="margin-bottom: 1rem" class="row">
                        <div class="col-md-3">
                            <RadzenLabel Text=@MultilenguajeController.ObtenerTextoPorClave("DEPOSITARIOID",dataLenguaje) Component="DepositarioId" style="width: 100%">
                            </RadzenLabel>
                        </div>
                        <div class="col-md-4">
                            <RadzenDropDown AllowClear="false" TValue="Int64" Class="w-100" Value="@DepositarioId"
                                Data=@Depositario_DepositarioId_entities TextProperty="Nombre" ValueProperty="Id"
                                Disabled="true" />
                        </div>
                    </div>
                    <div style="margin-bottom: 1rem" class="row">
                        <div class="col-md-3">
                            <RadzenLabel Text=@MultilenguajeController.ObtenerTextoPorClave("TIPOPLACAID",dataLenguaje) Component="TipoPlacaId" style="width: 100%">
                            </RadzenLabel>
                        </div>
                        <div class="col-md-4">
                            @if ((@TipoPlaca_TipoPlacaId_entities.Count > 0 && @TipoPlaca_TipoPlacaId_entities.FirstOrDefault(c => c.Id == @DepositarioPlaca_entity.TipoPlacaId) != null) || crudMode != CrudMode.Delete)
                            {
                                var dataSet = crudMode == CrudMode.Add ? TipoPlaca_TipoPlacaId_entities.Where(x => x.Habilitado == true) : TipoPlaca_TipoPlacaId_entities.Where(x => (x.Habilitado == true) || x.Id == DepositarioPlaca_entity.TipoPlacaId);
                                <RadzenDropDown Name="TipoPlacaId" AllowFiltering="true" FilterOperator="StringFilterOperator.Contains" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                                AllowClear="true" TValue="Int64" Class="w-100" @bind-Value="@(DepositarioPlaca_entity.TipoPlacaId)"
                                Data=@dataSet TextProperty="Nombre" ValueProperty="Id"
                                Change=@(args => SelectTipoPlaca_TipoPlacaIdValueChanged(args))
                                Disabled="@(crudMode==CrudMode.Delete || estaProcesando)" />
                            }
                            else
                            {
                                <RadzenDropDown Name="TipoPlacaId" AllowClear="true" TValue="Int64" Class="w-100"
                                Data=@TipoPlaca_TipoPlacaId_entities TextProperty="Nombre" ValueProperty="Id"
                                Change=@(args => SelectTipoPlaca_TipoPlacaIdValueChanged(args))
                                Disabled="@(crudMode==CrudMode.Delete || estaProcesando)" />
                            }
                            @if (@crudMode != CrudMode.Delete)
                            {
                                <RadzenNumericRangeValidator Min="@(TipoPlaca_TipoPlacaId_entities.Count > 0 ? TipoPlaca_TipoPlacaId_entities.Min(x => x.Id) : 1)" Component="TipoPlacaId" Text="TipoPlacaId is required" Style="position: relative">
                                </RadzenNumericRangeValidator>
                            }
                        </div>
                    </div>
                    <div style="margin-bottom: 1rem" class="row">
                        <div class="col-md-3">
                            <RadzenLabel Text=@MultilenguajeController.ObtenerTextoPorClave("PORTNAME",dataLenguaje) Component="PortName" style="width: 100%">
                            </RadzenLabel>
                        </div>
                        <div class="col-md-9">
                            <RadzenTextBox style="display: block" @bind-Value="@(DepositarioPlaca_entity.PortName)" Name="PortName" Disabled="@(crudMode==CrudMode.Delete || estaProcesando)">
                            </RadzenTextBox>
                            @if (@crudMode != CrudMode.Delete)
                            {
                                <RadzenRequiredValidator Component="PortName" Text="PortName is required" Style="position: absolute">
                                </RadzenRequiredValidator>
                            }
                        </div>
                    </div>
                    <div style="margin-bottom: 1rem" class="row">
                        <div class="col-md-3">
                            <RadzenLabel Text=@MultilenguajeController.ObtenerTextoPorClave("PARITY",dataLenguaje) Component="Parity" style="width: 100%">
                            </RadzenLabel>
                        </div>
                        <div class="col-md-auto">
                            <RadzenNumeric TValue="int" style="display: block; width: 100%" @bind-Value="@(DepositarioPlaca_entity.Parity)" Name="Parity" Disabled="@(crudMode==CrudMode.Delete || estaProcesando)">
                            </RadzenNumeric>
                        </div>
                    </div>
                    <div style="margin-bottom: 1rem" class="row">
                        <div class="col-md-3">
                            <RadzenLabel Text=@MultilenguajeController.ObtenerTextoPorClave("DATABITS",dataLenguaje) Component="DataBits" style="width: 100%">
                            </RadzenLabel>
                        </div>
                        <div class="col-md-auto">
                            <RadzenNumeric TValue="int" style="display: block; width: 100%" @bind-Value="@(DepositarioPlaca_entity.DataBits)" Name="DataBits" Disabled="@(crudMode==CrudMode.Delete || estaProcesando)">
                            </RadzenNumeric>
                        </div>
                    </div>
                    <div style="margin-bottom: 1rem" class="row">
                        <div class="col-md-3">
                            <RadzenLabel Text=@MultilenguajeController.ObtenerTextoPorClave("READBUFFERSIZE",dataLenguaje) Component="ReadBufferSize" style="width: 100%">
                            </RadzenLabel>
                        </div>
                        <div class="col-md-auto">
                            <RadzenNumeric TValue="int" style="display: block; width: 100%" @bind-Value="@(DepositarioPlaca_entity.ReadBufferSize)" Name="ReadBufferSize" Disabled="@(crudMode==CrudMode.Delete || estaProcesando)">
                            </RadzenNumeric>
                        </div>
                    </div>
                    <div style="margin-bottom: 1rem" class="row">
                        <div class="col-md-3">
                            <RadzenLabel Text=@MultilenguajeController.ObtenerTextoPorClave("STOPBITS",dataLenguaje) Component="StopBits" style="width: 100%">
                            </RadzenLabel>
                        </div>
                        <div class="col-md-auto">
                            <RadzenNumeric TValue="int" style="display: block; width: 100%" @bind-Value="@(DepositarioPlaca_entity.StopBits)" Name="StopBits" Disabled="@(crudMode==CrudMode.Delete || estaProcesando)">
                            </RadzenNumeric>
                        </div>
                    </div>
                    <div style="margin-bottom: 1rem" class="row">
                        <div class="col-md-3">
                            <RadzenLabel Text=@MultilenguajeController.ObtenerTextoPorClave("READTIMEOUT",dataLenguaje) Component="ReadTimeout" style="width: 100%">
                            </RadzenLabel>
                        </div>
                        <div class="col-md-auto">
                            <RadzenNumeric TValue="int" style="display: block; width: 100%" @bind-Value="@(DepositarioPlaca_entity.ReadTimeout)" Name="ReadTimeout" Disabled="@(crudMode==CrudMode.Delete || estaProcesando)">
                            </RadzenNumeric>
                        </div>
                    </div>
                    <div style="margin-bottom: 1rem" class="row">
                        <div class="col-md-3">
                            <RadzenLabel Text=@MultilenguajeController.ObtenerTextoPorClave("HANDSHAKE",dataLenguaje) Component="Handshake" style="width: 100%">
                            </RadzenLabel>
                        </div>
                        <div class="col-md-auto">
                            <RadzenNumeric TValue="int" style="display: block; width: 100%" @bind-Value="@(DepositarioPlaca_entity.Handshake)" Name="Handshake" Disabled="@(crudMode==CrudMode.Delete || estaProcesando)">
                            </RadzenNumeric>
                        </div>
                    </div>
                    <div style="margin-bottom: 1rem" class="row">
                        <div class="col-md-3">
                            <RadzenLabel Text=@MultilenguajeController.ObtenerTextoPorClave("BAUDRATE",dataLenguaje) Component="BaudRate" style="width: 100%">
                            </RadzenLabel>
                        </div>
                        <div class="col-md-auto">
                            <RadzenNumeric TValue="int" style="display: block; width: 100%" @bind-Value="@(DepositarioPlaca_entity.BaudRate)" Name="BaudRate" Disabled="@(crudMode==CrudMode.Delete || estaProcesando)">
                            </RadzenNumeric>
                        </div>
                    </div>
                    <div style="margin-bottom: 1rem" class="row">
                        <div class="col-md-3">
                            <RadzenLabel Text=@MultilenguajeController.ObtenerTextoPorClave("RTSENABLE",dataLenguaje) Component="RtsEnable" Style="margin-left: 0px; vertical-align: middle;" />
                        </div>
                        <div class="col-md-9">
                            <RadzenCheckBox @bind-Value=@DepositarioPlaca_entity.RtsEnable Name="RtsEnableCheckBox" TValue="bool" Change=@(args => RtsEnableChange(args, @DepositarioPlaca_entity)) Disabled="@(crudMode == CrudMode.Delete || estaProcesando)" />
                        </div>
                    </div>
                    <div style="margin-bottom: 1rem" class="row">
                        <div class="col-md-3">
                            <RadzenLabel Text=@MultilenguajeController.ObtenerTextoPorClave("SENSORA",dataLenguaje) Component="SensorA" Style="margin-left: 0px; vertical-align: middle;" />
                        </div>
                        <div class="col-md-9">
                            <RadzenCheckBox @bind-Value=@DepositarioPlaca_entity.SensorA Name="SensorACheckBox" TValue="bool" Change=@(args => SensorAChange(args, @DepositarioPlaca_entity)) Disabled="@(crudMode == CrudMode.Delete || estaProcesando)" />
                        </div>
                    </div>
                    <div style="margin-bottom: 1rem" class="row">
                        <div class="col-md-3">
                            <RadzenLabel Text=@MultilenguajeController.ObtenerTextoPorClave("BITSENSORA",dataLenguaje) Component="BitSensorA" style="width: 100%">
                            </RadzenLabel>
                        </div>
                        <div class="col-md-auto">
                            <RadzenNumeric TValue="short" style="display: block; width: 100%" @bind-Value="@(DepositarioPlaca_entity.BitSensorA)" Name="BitSensorA" Disabled="@(crudMode==CrudMode.Delete || estaProcesando)">
                            </RadzenNumeric>
                        </div>
                    </div>
                    <div style="margin-bottom: 1rem" class="row">
                        <div class="col-md-3">
                            <RadzenLabel Text=@MultilenguajeController.ObtenerTextoPorClave("SENSORB",dataLenguaje) Component="SensorB" Style="margin-left: 0px; vertical-align: middle;" />
                        </div>
                        <div class="col-md-9">
                            <RadzenCheckBox @bind-Value=@DepositarioPlaca_entity.SensorB Name="SensorBCheckBox" TValue="bool" Change=@(args => SensorBChange(args, @DepositarioPlaca_entity)) Disabled="@(crudMode == CrudMode.Delete || estaProcesando)" />
                        </div>
                    </div>
                    <div style="margin-bottom: 1rem" class="row">
                        <div class="col-md-3">
                            <RadzenLabel Text=@MultilenguajeController.ObtenerTextoPorClave("BITSENSORB",dataLenguaje) Component="BitSensorB" style="width: 100%">
                            </RadzenLabel>
                        </div>
                        <div class="col-md-auto">
                            <RadzenNumeric TValue="short" style="display: block; width: 100%" @bind-Value="@(DepositarioPlaca_entity.BitSensorB)" Name="BitSensorB" Disabled="@(crudMode==CrudMode.Delete || estaProcesando)">
                            </RadzenNumeric>
                        </div>
                    </div>
                    <div style="margin-bottom: 1rem" class="row">
                        <div class="col-md-3">
                            <RadzenLabel Text=@MultilenguajeController.ObtenerTextoPorClave("SENSORC",dataLenguaje) Component="SensorC" Style="margin-left: 0px; vertical-align: middle;" />
                        </div>
                        <div class="col-md-9">
                            <RadzenCheckBox @bind-Value=@DepositarioPlaca_entity.SensorC Name="SensorCCheckBox" TValue="bool" Change=@(args => SensorCChange(args, @DepositarioPlaca_entity)) Disabled="@(crudMode == CrudMode.Delete || estaProcesando)" />
                        </div>
                    </div>
                    <div style="margin-bottom: 1rem" class="row">
                        <div class="col-md-3">
                            <RadzenLabel Text=@MultilenguajeController.ObtenerTextoPorClave("BITSENSORC",dataLenguaje) Component="BitSensorC" style="width: 100%">
                            </RadzenLabel>
                        </div>
                        <div class="col-md-auto">
                            <RadzenNumeric TValue="short" style="display: block; width: 100%" @bind-Value="@(DepositarioPlaca_entity.BitSensorC)" Name="BitSensorC" Disabled="@(crudMode==CrudMode.Delete || estaProcesando)">
                            </RadzenNumeric>
                        </div>
                    </div>
                    <div style="margin-bottom: 1rem" class="row">
                        <div class="col-md-3">
                            <RadzenLabel Text=@MultilenguajeController.ObtenerTextoPorClave("SENSORD",dataLenguaje) Component="SensorD" Style="margin-left: 0px; vertical-align: middle;" />
                        </div>
                        <div class="col-md-9">
                            <RadzenCheckBox @bind-Value=@DepositarioPlaca_entity.SensorD Name="SensorDCheckBox" TValue="bool" Change=@(args => SensorDChange(args, @DepositarioPlaca_entity)) Disabled="@(crudMode == CrudMode.Delete || estaProcesando)" />
                        </div>
                    </div>
                    <div style="margin-bottom: 1rem" class="row">
                        <div class="col-md-3">
                            <RadzenLabel Text=@MultilenguajeController.ObtenerTextoPorClave("BITSENSORD",dataLenguaje) Component="BitSensorD" style="width: 100%">
                            </RadzenLabel>
                        </div>
                        <div class="col-md-auto">
                            <RadzenNumeric TValue="short" style="display: block; width: 100%" @bind-Value="@(DepositarioPlaca_entity.BitSensorD)" Name="BitSensorD" Disabled="@(crudMode==CrudMode.Delete || estaProcesando)">
                            </RadzenNumeric>
                        </div>
                    </div>
                    <div style="margin-bottom: 1rem" class="row">
                        <div class="col-md-3">
                            <RadzenLabel Text=@MultilenguajeController.ObtenerTextoPorClave("SENSORL",dataLenguaje) Component="SensorL" Style="margin-left: 0px; vertical-align: middle;" />
                        </div>
                        <div class="col-md-9">
                            <RadzenCheckBox @bind-Value=@DepositarioPlaca_entity.SensorL Name="SensorLCheckBox" TValue="bool" Change=@(args => SensorLChange(args, @DepositarioPlaca_entity)) Disabled="@(crudMode == CrudMode.Delete || estaProcesando)" />
                        </div>
                    </div>
                    <div style="margin-bottom: 1rem" class="row">
                        <div class="col-md-3">
                            <RadzenLabel Text=@MultilenguajeController.ObtenerTextoPorClave("BITSENSORL",dataLenguaje) Component="BitSensorL" style="width: 100%">
                            </RadzenLabel>
                        </div>
                        <div class="col-md-auto">
                            <RadzenNumeric TValue="short" style="display: block; width: 100%" @bind-Value="@(DepositarioPlaca_entity.BitSensorL)" Name="BitSensorL" Disabled="@(crudMode==CrudMode.Delete || estaProcesando)">
                            </RadzenNumeric>
                        </div>
                    </div>
                    <div style="margin-bottom: 1rem" class="row">
                        <div class="col-md-3">
                            <RadzenLabel Text=@MultilenguajeController.ObtenerTextoPorClave("POLLTIME",dataLenguaje) Component="PollTime" style="width: 100%">
                            </RadzenLabel>
                        </div>
                        <div class="col-md-auto">
                            <RadzenNumeric TValue="int" style="display: block; width: 100%" @bind-Value="@(DepositarioPlaca_entity.PollTime)" Name="PollTime" Disabled="@(crudMode==CrudMode.Delete || estaProcesando)">
                            </RadzenNumeric>
                        </div>
                    </div>
                    <div style="margin-bottom: 1rem" class="row">
                        <div class="col-md-3">
                            <RadzenLabel Text=@MultilenguajeController.ObtenerTextoPorClave("SLEEPTIME",dataLenguaje) Component="Sleeptime" style="width: 100%">
                            </RadzenLabel>
                        </div>
                        <div class="col-md-auto">
                            <RadzenNumeric TValue="int" style="display: block; width: 100%" @bind-Value="@(DepositarioPlaca_entity.Sleeptime)" Name="Sleeptime" Disabled="@(crudMode==CrudMode.Delete || estaProcesando)">
                            </RadzenNumeric>
                        </div>
                    </div>
                    <div style="margin-bottom: 1rem" class="row">
                        <div class="col-md-3">
                            <RadzenLabel Text=@MultilenguajeController.ObtenerTextoPorClave("HABILITADO",dataLenguaje) Component="Habilitado" Style="margin-left: 0px; vertical-align: middle;" />
                        </div>
                        <div class="col-md-9">
                            <RadzenCheckBox @bind-Value=@DepositarioPlaca_entity.Habilitado Name="HabilitadoCheckBox" TValue="bool" Change=@(args => HabilitadoChange(args, @DepositarioPlaca_entity)) Disabled="@(crudMode == CrudMode.Delete || estaProcesando)" />
                        </div>
                    </div>
                    <div class="row">
                        <div class="col offset-sm-3">
                            <RadzenButton Disabled="@estaProcesando" ButtonType="ButtonType.Submit" Icon="save" Text=@MultilenguajeController.ObtenerTextoPorClave("BOTON_ACEPTAR",dataLenguaje) ButtonStyle="ButtonStyle.Primary">
                            </RadzenButton>
                            <RadzenButton Disabled="@estaProcesando" ButtonStyle="ButtonStyle.Secondary" Icon="save" style="margin-left: 1rem" Text=@MultilenguajeController.ObtenerTextoPorClave("BOTON_CANCELAR",dataLenguaje) Click="Cancel">
                            </RadzenButton>
                        </div>
                    </div>
                </ChildContent>
            </RadzenTemplateForm>
            <hr>
        }

        <RadzenNotification />
    }
}
else
{
    <div style="height:80px;">
        <div class="spinnerCentradoLateralRelativo"></div>
    </div>
}

@code {
    [Parameter]
    public Int64 DepositarioId { get; set; }

    [Parameter]
    public Int64 ModeloId { get; set; }

    /// <summary>
    /// Crud Mode Enum
    /// </summary>
    private enum CrudMode
    {
        List,
        Add,
        Edit,
        Delete
    }

    /// <summary>
    /// Variable to save grid state
    /// </summary>
    private DataGridSettings GridSettings;

    /// <summary>
    /// List which stores definitions to customize grid columns
    /// </summary>
    private CustomizadorEntities.CustomizacionPagina dataCustomizacionPagina = new();

    private bool estaProcesando = false;

    /// <summary>
    /// Variables to handle column filter for field Banco.Habilitado
    private bool? Habilitado_filter;

    /// <summary>
    /// Variables to handle main entity
    /// </summary>
    private Depositary.Entities.Tables.Dispositivo.DepositarioPlaca DepositarioPlaca_entity = new();
    private List<Depositary.Entities.Tables.Dispositivo.DepositarioPlaca> DepositarioPlaca_entities = null;

    /// <summary>
    /// Variables to store multilanguaje
    /// </summary>
    private List<Entities.TextoLenguaje> dataLenguaje;

    private List<Depositary.Entities.Tables.Estilo.EsquemaDetalle> dataEsquemaDetalle = new();

    private Depositary.Entities.Tables.Seguridad.Rol? usuarioRol = new();

    /// <summary>
    /// Variables to store permissions
    /// </summary>
    private List<SeguridadEntities.FuncionRol> dataFunciones;

    /// <summary>
    /// Variables to handle Relation between DepositarioPlaca.DepositarioId and Depositario.Id
    /// </summary>
    private Depositary.Entities.Tables.Dispositivo.Depositario Depositario_DepositarioId_entity = new();
    private List<Depositary.Entities.Tables.Dispositivo.Depositario>? Depositario_DepositarioId_entities;
    private List<Depositary.Entities.Tables.Dispositivo.Depositario> Depositario_DepositarioId_filter;
    private IEnumerable<Int64> selectedFilter_DepositarioId;

    /// <summary>
    /// Variables to handle Relation between DepositarioPlaca.TipoPlacaId and TipoPlaca.Id
    /// </summary>
    private Depositary.Entities.Tables.Dispositivo.TipoPlaca TipoPlaca_TipoPlacaId_entity = new();
    private List<Depositary.Entities.Tables.Dispositivo.TipoPlaca>? TipoPlaca_TipoPlacaId_entities;
    private List<Depositary.Entities.Tables.Dispositivo.TipoPlaca> TipoPlaca_TipoPlacaId_filter;
    private IEnumerable<Int64> selectedFilter_TipoPlacaId;

    /// <summary>
    /// Variables to handle Relation between DepositarioPlaca.UsuarioCreacion and Usuario.Id
    /// </summary>
    private Depositary.Entities.Tables.Seguridad.Usuario Usuario_UsuarioCreacion_entity = new();
    private List<Depositary.Entities.Tables.Seguridad.Usuario>? Usuario_UsuarioCreacion_entities;
    private List<Depositary.Entities.Tables.Seguridad.Usuario> Usuario_UsuarioCreacion_filter;
    private IEnumerable<Int64> selectedFilter_UsuarioCreacion;

    /// <summary>
    /// Variables to handle Relation between DepositarioPlaca.UsuarioModificacion and Usuario.Id
    /// </summary>
    private Depositary.Entities.Tables.Seguridad.Usuario Usuario_UsuarioModificacion_entity = new();
    private List<Depositary.Entities.Tables.Seguridad.Usuario>? Usuario_UsuarioModificacion_entities;
    private List<Depositary.Entities.Tables.Seguridad.Usuario> Usuario_UsuarioModificacion_filter;
    private IEnumerable<Int64> selectedFilter_UsuarioModificacion;

    /// <summary>
    ///  Page crud mode {List,Add,Edit,Delete}
    /// </summary>
    private CrudMode crudMode = CrudMode.List;

    /// <summary>
    ///  Variable to store the user id
    /// </summary>
    private Depositary.Entities.Tables.Seguridad.Usuario? dataUsuario = null;

    protected override async Task OnInitializedAsync()
    {
        dataUsuario = await sessionStorage.GetItemAsync<Depositary.Entities.Tables.Seguridad.Usuario?>("DataUsuario");
        if (dataUsuario == null)
            NavManager.NavigateTo("login", true);
        dataLenguaje = await sessionStorage.GetItemAsync<List<Entities.TextoLenguaje>>("DataLenguaje");
        await sessionStorage.RemoveItemAsync("DataFunciones");
        await sessionStorage.RemoveItemAsync("RolId");
        dataCustomizacionPagina = CustomizadorController.ObtenerCustomizacionPagina("Dispositivo", "DepositarioPlaca");
        dataEsquemaDetalle = await sessionStorage.GetItemAsync<List<Depositary.Entities.Tables.Estilo.EsquemaDetalle>>("DataEsquemaDetalle");
        usuarioRol = SeguridadController.ObtenerRolesPorUsuario(dataUsuario.Id);
        dataFunciones = SeguridadController.ObtenerFuncionesPorRol(usuarioRol.Id);
        await sessionStorage.SetItemAsync("RolId", usuarioRol.Id);
        await sessionStorage.SetItemAsync("DataFunciones", dataFunciones);
        await Task.Run(LoadMainEntityData);
        await Task.Run(LoadTypesData);
    }
    #region Loading entities data
    /// <summary>
    /// Loads main entity data
    /// </summary>
    private void LoadMainEntityData()
    {
        if (dataCustomizacionPagina.AtributosTabla.HabilitarAuditoria)
            AuditController.Log(AuditController.LogTypeEnum.Navigation, "Acceso a " + "DispositivoDepositarioPlaca", crudMode.ToString(), dataUsuario.Id);
        estaProcesando = false;
        Depositary.Business.Tables.Dispositivo.DepositarioPlaca entity = new();
        entity.Where.Add(Depositary.Business.Tables.Dispositivo.DepositarioPlaca.ColumnEnum.DepositarioId, Depositary.sqlEnum.OperandEnum.Equal, DepositarioId);
        DepositarioPlaca_entities = entity.Items();
    }
    /// <summary>
    /// Loads Type Tables data
    /// </summary>
    private void LoadTypesData()
    {
        Depositary.Business.Tables.Dispositivo.Depositario Depositario_DepositarioId_local = new();
        Depositario_DepositarioId_entities = Depositario_DepositarioId_local.Items();
        Depositario_DepositarioId_filter = Depositario_DepositarioId_entities.Where(x => DepositarioPlaca_entities.Select(x => x.DepositarioId).Distinct().Contains(x.Id)).ToList();

        Depositary.Business.Tables.Dispositivo.TipoPlaca TipoPlaca_TipoPlacaId_local = new();
        TipoPlaca_TipoPlacaId_entities = TipoPlaca_TipoPlacaId_local.Items();
        TipoPlaca_TipoPlacaId_filter = TipoPlaca_TipoPlacaId_entities.Where(x => DepositarioPlaca_entities.Select(x => x.TipoPlacaId).Distinct().Contains(x.Id)).ToList();

        Depositary.Business.Tables.Seguridad.Usuario Usuario_UsuarioCreacion_local = new();
        Usuario_UsuarioCreacion_entities = Usuario_UsuarioCreacion_local.Items();
        Usuario_UsuarioCreacion_filter = Usuario_UsuarioCreacion_entities.Where(x => DepositarioPlaca_entities.Select(x => x.UsuarioCreacion).Distinct().Contains(x.Id)).ToList();

        Depositary.Business.Tables.Seguridad.Usuario Usuario_UsuarioModificacion_local = new();
        Usuario_UsuarioModificacion_entities = Usuario_UsuarioModificacion_local.Items();
        Usuario_UsuarioModificacion_filter = Usuario_UsuarioModificacion_entities.Where(x => DepositarioPlaca_entities.Select(x => x.UsuarioModificacion).Distinct().Contains(x.Id)).ToList();

    }

    #endregion

    /// <summary>
    /// Initializations for adding a new entity
    /// </summary>
    private void Add()
    {
        //Main entity initialization
        DepositarioPlaca_entity = new();
        //Relations entities initialization
        Depositario_DepositarioId_entity = new();
        TipoPlaca_TipoPlacaId_entity = new();
        Usuario_UsuarioCreacion_entity = new();
        Usuario_UsuarioModificacion_entity = new();
        crudMode = CrudMode.Add;
        if (dataCustomizacionPagina.AtributosTabla.HabilitarAuditoria)
            AuditController.Log(AuditController.LogTypeEnum.Navigation, "Acceso a " + "DispositivoDepositarioPlaca", crudMode.ToString(), dataUsuario.Id);
    }
    /// <summary>
    /// <summary>
    /// Initializations for editing an entity
    /// </summary>
    private void Edit(Depositary.Entities.Tables.Dispositivo.DepositarioPlaca item, bool delete)
    {
        DepositarioPlaca_entity = item;
        Depositario_DepositarioId_entity = new()
            {
                Id = Depositario_DepositarioId_entities.FirstOrDefault(c => c.Id == DepositarioPlaca_entity.DepositarioId).Id,
                Nombre = Depositario_DepositarioId_entities.FirstOrDefault(c => c.Id == DepositarioPlaca_entity.DepositarioId).Nombre
            };
        TipoPlaca_TipoPlacaId_entity = new()
            {
                Id = TipoPlaca_TipoPlacaId_entities.FirstOrDefault(c => c.Id == DepositarioPlaca_entity.TipoPlacaId).Id,
                Nombre = TipoPlaca_TipoPlacaId_entities.FirstOrDefault(c => c.Id == DepositarioPlaca_entity.TipoPlacaId).Nombre
            };
        Usuario_UsuarioCreacion_entity = new()
            {
                Id = Usuario_UsuarioCreacion_entities.FirstOrDefault(c => c.Id == DepositarioPlaca_entity.UsuarioCreacion).Id,
                Nombre = Usuario_UsuarioCreacion_entities.FirstOrDefault(c => c.Id == DepositarioPlaca_entity.UsuarioCreacion).Nombre
            };
        if (Usuario_UsuarioModificacion_entities.Exists(c => c.Id == DepositarioPlaca_entity.UsuarioModificacion))
        {
            Usuario_UsuarioModificacion_entity = new()
                {
                    Id = Usuario_UsuarioModificacion_entities.FirstOrDefault(c => c.Id == DepositarioPlaca_entity.UsuarioModificacion).Id,
                    Nombre = Usuario_UsuarioModificacion_entities.FirstOrDefault(c => c.Id == DepositarioPlaca_entity.UsuarioModificacion).Nombre
                };
        }
        if (delete)
            crudMode = CrudMode.Delete;
        else
            crudMode = CrudMode.Edit;

        if (dataCustomizacionPagina.AtributosTabla.HabilitarAuditoria)
            AuditController.Log(AuditController.LogTypeEnum.Navigation, "Acceso a " + "DispositivoDepositarioPlaca", crudMode.ToString() + " Id: " + item.Id, dataUsuario.Id);
    }
    /// <summary>
    /// Operation depending on Crud mode
    /// </summary>
    private async Task Save()
    {
        estaProcesando = true;
        await Task.Run(Procesar);
        estaProcesando = false;
    }

    private async Task Procesar()
    {
        string actionInformation = string.Empty;
        NotificationSeverity severityType = NotificationSeverity.Error;
        string summary = string.Empty;
        Depositary.Business.Tables.Dispositivo.DepositarioPlaca crud = new();
        DepositarioPlaca_entity.DepositarioId = DepositarioId;
        foreach (var property in DepositarioPlaca_entity.GetType().GetProperties())
        {
            switch (property.Name)
            {
                case "FechaModificacion":
                    if (crudMode == CrudMode.Add)
                    {
                        DepositarioPlaca_entity.FechaModificacion = null;
                    }
                    else
                    {
                        DepositarioPlaca_entity.FechaModificacion = DateTime.Now;
                    }
                    break;
                case "FechaCreacion":
                    if (crudMode == CrudMode.Add)
                    {
                        DepositarioPlaca_entity.FechaCreacion = DateTime.Now;
                    }
                    break;
                case "UsuarioCreacion":
                    if (crudMode == CrudMode.Add)
                    {
                        DepositarioPlaca_entity.UsuarioCreacion = dataUsuario.Id;
                    }
                    break;
                case "UsuarioModificacion":
                    if (crudMode == CrudMode.Add)
                    {
                        DepositarioPlaca_entity.UsuarioModificacion = null;
                    }
                    else
                    {
                        DepositarioPlaca_entity.UsuarioModificacion = dataUsuario.Id;
                    }
                    break;
            }
        }
        switch (crudMode)
        {
            case CrudMode.Add:
                try
                {
                    crud.Add(DepositarioPlaca_entity, (long)SeguridadEntities.Aplicacion.AdministradorWeb);
                    summary = "El registro se ha ";
                    actionInformation = "agregado.";
                    severityType = NotificationSeverity.Success;
                }
                catch (Exception ex)
                {
                    AuditController.Log(ex, dataUsuario.Id);
                    summary = "Error al procesar.";
                    actionInformation = ex.Message;
                    severityType = NotificationSeverity.Error;
                }
                break;
            case CrudMode.Edit:
                try
                {
                    crud.Update(DepositarioPlaca_entity, (long)SeguridadEntities.Aplicacion.AdministradorWeb);
                    summary = "El registro se ha ";
                    actionInformation = "modificado.";
                    severityType = NotificationSeverity.Success;
                }
                catch (Exception ex)
                {
                    AuditController.Log(ex, dataUsuario.Id);
                    summary = "Error al procesar.";
                    actionInformation = ex.Message;
                    severityType = NotificationSeverity.Error;
                }
                break;
            case CrudMode.Delete:
                try
                {
                    DepositarioPlaca_entity.Habilitado = false;
                    crud.Update(DepositarioPlaca_entity, (long)SeguridadEntities.Aplicacion.AdministradorWeb);
                    summary = "El registro se ha ";
                    actionInformation = "eliminado.";
                    severityType = NotificationSeverity.Success;
                }
                catch (Exception ex)
                {
                    AuditController.Log(ex, dataUsuario.Id);
                    summary = "Error al procesar.";
                    actionInformation = ex.Message;
                    severityType = NotificationSeverity.Error;
                }
                break;
        }

        // Sets Crud mode to List
        crudMode = CrudMode.List;

        ShowNotification(new NotificationMessage
            {
                Severity = severityType,
                Summary = summary,
                Detail = actionInformation,
                Duration = 4000
            });

        await Task.Run(LoadMainEntityData);
    }
    /// <summary>
    /// Crud mode cancellation and default mode
    /// </summary>
    private void Cancel()
    {
        crudMode = CrudMode.List;
        LoadMainEntityData();
    }
    /// <summary>
    /// Sets detail panel title - TODO: Implement Multilanguage
    /// </summary>
    /// <returns></returns>
    private string GetDialogTitle()
    {
        string retValue = string.Empty;
        switch (crudMode)
        {
            case CrudMode.Add:
                retValue = "Nuevo...";
                break;
            case CrudMode.Edit:
                retValue = "Editar...";
                break;
            case CrudMode.Delete:
                retValue = "Borrar...";
                break;
        }
        return retValue;
    }
    #region Notifications
    private void ShowNotification(NotificationMessage message)
    {
        NotificationService.Notify(message);

    }

    #endregion
    #region Selection events
    /// <summary>
    /// Depositario_DepositarioId value changed
    /// </summary>
    /// <param name="item"></param>
    private void SelectDepositario_DepositarioIdValueChanged(object item)
    {
    }

    /// <summary>
    /// selectedFilter_DepositarioId value changed
    /// </summary>
    /// <param name="item"></param>
    private void OnSelectedFilter_DepositarioId_Changed(object value)
    {
        if (selectedFilter_DepositarioId != null && !selectedFilter_DepositarioId.Any())
        {
            selectedFilter_DepositarioId = null;
        }
    }

    /// <summary>
    /// TipoPlaca_TipoPlacaId value changed
    /// </summary>
    /// <param name="item"></param>
    private void SelectTipoPlaca_TipoPlacaIdValueChanged(object item)
    {
        Int64 TipoPlacaId;
        if (Int64.TryParse(item.ToString(), out TipoPlacaId))
        {
            Depositary.Business.Tables.Dispositivo.TipoPlaca tipoPlaca = new();
            tipoPlaca.Where.Add(Business.Tables.Dispositivo.TipoPlaca.ColumnEnum.Id, sqlEnum.OperandEnum.Equal, TipoPlacaId);
            tipoPlaca.Items();

            if (tipoPlaca.Result.Count > 0)
            {
                var configuracionPlaca = tipoPlaca.Result.FirstOrDefault();
                DepositarioPlaca_entity.BaudRate = configuracionPlaca.BaudRate;
                DepositarioPlaca_entity.BitSensorA = configuracionPlaca.BitSensorA;
                DepositarioPlaca_entity.BitSensorB = configuracionPlaca.BitSensorB;
                DepositarioPlaca_entity.BitSensorC = configuracionPlaca.BitSensorC;
                DepositarioPlaca_entity.BitSensorD = configuracionPlaca.BitSensorD;
                DepositarioPlaca_entity.BitSensorL = configuracionPlaca.BitSensorL;
                DepositarioPlaca_entity.DataBits = configuracionPlaca.DataBits;
                DepositarioPlaca_entity.Handshake = configuracionPlaca.Handshake;
                DepositarioPlaca_entity.Parity = configuracionPlaca.Parity;
                DepositarioPlaca_entity.PollTime = configuracionPlaca.PollTime;
                DepositarioPlaca_entity.PortName = configuracionPlaca.PortName;
                DepositarioPlaca_entity.ReadBufferSize = configuracionPlaca.ReadBufferSize;
                DepositarioPlaca_entity.ReadTimeout = configuracionPlaca.ReadTimeout;
                DepositarioPlaca_entity.RtsEnable = configuracionPlaca.RtsEnable;
                DepositarioPlaca_entity.SensorA = configuracionPlaca.SensorA;
                DepositarioPlaca_entity.SensorB = configuracionPlaca.SensorB;
                DepositarioPlaca_entity.SensorC = configuracionPlaca.SensorC;
                DepositarioPlaca_entity.SensorD = configuracionPlaca.SensorD;
                DepositarioPlaca_entity.SensorL = configuracionPlaca.SensorL;
                DepositarioPlaca_entity.Sleeptime = configuracionPlaca.Sleeptime;
                DepositarioPlaca_entity.StopBits = configuracionPlaca.StopBits;

            }
            else
            {
                DepositarioPlaca_entity.BaudRate = 0;
                DepositarioPlaca_entity.BitSensorA = 0;
                DepositarioPlaca_entity.BitSensorB = 0;
                DepositarioPlaca_entity.BitSensorC = 0;
                DepositarioPlaca_entity.BitSensorD = 0;
                DepositarioPlaca_entity.BitSensorL = 0;
                DepositarioPlaca_entity.DataBits = 0;
                DepositarioPlaca_entity.Handshake = 0;
                DepositarioPlaca_entity.Parity = 0;
                DepositarioPlaca_entity.PollTime = 0;
                DepositarioPlaca_entity.PortName = "";
                DepositarioPlaca_entity.ReadBufferSize = 0;
                DepositarioPlaca_entity.ReadTimeout = 0;
                DepositarioPlaca_entity.RtsEnable = false;
                DepositarioPlaca_entity.SensorA = false;
                DepositarioPlaca_entity.SensorB = false;
                DepositarioPlaca_entity.SensorC = false;
                DepositarioPlaca_entity.SensorD = false;
                DepositarioPlaca_entity.SensorL = false;
                DepositarioPlaca_entity.Sleeptime = 0;
                DepositarioPlaca_entity.StopBits = 0;
            }
        }

    }

    /// <summary>
    /// selectedFilter_TipoPlacaId value changed
    /// </summary>
    /// <param name="item"></param>
    private void OnSelectedFilter_TipoPlacaId_Changed(object value)
    {
        if (selectedFilter_TipoPlacaId != null && !selectedFilter_TipoPlacaId.Any())
        {
            selectedFilter_TipoPlacaId = null;
        }
    }

    /// <summary>
    /// Usuario_UsuarioCreacion value changed
    /// </summary>
    /// <param name="item"></param>
    private void SelectUsuario_UsuarioCreacionValueChanged(object item)
    {
    }

    /// <summary>
    /// selectedFilter_UsuarioCreacion value changed
    /// </summary>
    /// <param name="item"></param>
    private void OnSelectedFilter_UsuarioCreacion_Changed(object value)
    {
        if (selectedFilter_UsuarioCreacion != null && !selectedFilter_UsuarioCreacion.Any())
        {
            selectedFilter_UsuarioCreacion = null;
        }
    }

    /// <summary>
    /// Usuario_UsuarioModificacion value changed
    /// </summary>
    /// <param name="item"></param>
    private void SelectUsuario_UsuarioModificacionValueChanged(object item)
    {
    }

    /// <summary>
    /// selectedFilter_UsuarioModificacion value changed
    /// </summary>
    /// <param name="item"></param>
    private void OnSelectedFilter_UsuarioModificacion_Changed(object value)
    {
        if (selectedFilter_UsuarioModificacion != null && !selectedFilter_UsuarioModificacion.Any())
        {
            selectedFilter_UsuarioModificacion = null;
        }
    }

    /// <summary>
    /// Entity is binded, however it sets anyway.
    /// </summary>
    /// <returns></returns>
    void RtsEnableChange(bool? value, Depositary.Entities.Tables.Dispositivo.DepositarioPlaca item)
    {
        DepositarioPlaca_entity = item;
    }
    /// <summary>
    /// Entity is binded, however it sets anyway.
    /// </summary>
    /// <returns></returns>
    void SensorAChange(bool? value, Depositary.Entities.Tables.Dispositivo.DepositarioPlaca item)
    {
        DepositarioPlaca_entity = item;
    }
    /// <summary>
    /// Entity is binded, however it sets anyway.
    /// </summary>
    /// <returns></returns>
    void SensorBChange(bool? value, Depositary.Entities.Tables.Dispositivo.DepositarioPlaca item)
    {
        DepositarioPlaca_entity = item;
    }
    /// <summary>
    /// Entity is binded, however it sets anyway.
    /// </summary>
    /// <returns></returns>
    void SensorCChange(bool? value, Depositary.Entities.Tables.Dispositivo.DepositarioPlaca item)
    {
        DepositarioPlaca_entity = item;
    }
    /// <summary>
    /// Entity is binded, however it sets anyway.
    /// </summary>
    /// <returns></returns>
    void SensorDChange(bool? value, Depositary.Entities.Tables.Dispositivo.DepositarioPlaca item)
    {
        DepositarioPlaca_entity = item;
    }
    /// <summary>
    /// Entity is binded, however it sets anyway.
    /// </summary>
    /// <returns></returns>
    void SensorLChange(bool? value, Depositary.Entities.Tables.Dispositivo.DepositarioPlaca item)
    {
        DepositarioPlaca_entity = item;
    }
    /// <summary>
    /// Entity is binded, however it sets anyway.
    /// </summary>
    /// <returns></returns>
    void HabilitadoChange(bool? value, Depositary.Entities.Tables.Dispositivo.DepositarioPlaca item)
    {
        DepositarioPlaca_entity = item;
    }

    /// <summary>
    /// DepositarioPlacaCellRender event
    /// </summary>
    /// <param name="args"></param>
    private void DepositarioPlacaCellRender(DataGridCellRenderEventArgs<Depositary.Entities.Tables.Dispositivo.DepositarioPlaca> args)
    {
        if (!args.Data.Habilitado)
            args.Attributes.Add("class", "row-highlight-disabled");
        else
            args.Attributes.Add("class", "rz-datatable-even");
    }
    #endregion

    #region Export

    #endregion

}
