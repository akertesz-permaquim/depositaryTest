@page "/perfil"
@layout MainLayout

@using Permaquim.Depositary.Web.Administration.Controllers

@inject NotificationService NotificationService
@inject NavigationManager NavManager
@inject Microsoft.Extensions.Localization.IStringLocalizer<Login> L
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage

<RadzenContent Container="main">
    <ChildContent>
        <RadzenHeading Size="H1" style="display: inline-block; vertical-align:middle" Text="Datos de perfil">
        </RadzenHeading>
        <hr>
        @if (estaCargando)
        {
            <div class="spinner"></div>
        }
        else
        {
            <RadzenTemplateForm TItem="Depositary.Entities.Tables.Seguridad.Usuario" Data="@Usuario_entity" @bind-Value="Usuario_entity" Submit="Save" Visible="@(Usuario_entity != null)">
                <ChildContent>
                    <div style="margin-bottom: 1rem" class="row">
                        <div class="col-md-3">
                            <RadzenLabel Text=@MultilenguajeController.ObtenerTextoPorClave("EMPRESAID",dataLenguaje) Component="EmpresaId" style="width: 100%">
                            </RadzenLabel>
                        </div>
                        <div class="col-md-9">
                            <RadzenDropDown AllowClear="true" TValue="Int64" Class="w-100" Value="@(Usuario_entity.EmpresaId)"
                                        Data=@Empresa_EmpresaId_entities TextProperty="Nombre" ValueProperty="Id"
                                        Disabled="true" />
                        </div>
                    </div>
                    <div style="margin-bottom: 1rem" class="row">
                        <div class="col-md-3">
                            <RadzenLabel Text=@MultilenguajeController.ObtenerTextoPorClave("LENGUAJEID",dataLenguaje) Component="LenguajeId" style="width: 100%">
                            </RadzenLabel>
                        </div>
                        <div class="col-md-9">
                            <RadzenDropDown AllowClear="true" TValue="Int64" Class="w-100" @bind-Value="@(Usuario_entity.LenguajeId)"
                                        Data=@Lenguaje_LenguajeId_entities TextProperty="Descripcion" ValueProperty="Id" />
                        </div>
                    </div>
                    <div style="margin-bottom: 1rem" class="row">
                        <div class="col-md-3">
                            <RadzenLabel Text=@MultilenguajeController.ObtenerTextoPorClave("NOMBRE",dataLenguaje) Component="Nombre" style="width: 100%">
                            </RadzenLabel>
                        </div>
                        <div class="col-md-9">
                            <RadzenTextBox style="display: block" @bind-Value="@(Usuario_entity.Nombre)" Name="Nombre" Disabled="false">
                            </RadzenTextBox>
                        </div>
                    </div>
                    <div style="margin-bottom: 1rem" class="row">
                        <div class="col-md-3">
                            <RadzenLabel Text=@MultilenguajeController.ObtenerTextoPorClave("APELLIDO",dataLenguaje) Component="Apellido" style="width: 100%">
                            </RadzenLabel>
                        </div>
                        <div class="col-md-9">
                            <RadzenTextBox style="display: block" @bind-Value="@(Usuario_entity.Apellido)" Name="Apellido" Disabled="false">
                            </RadzenTextBox>
                            <RadzenRequiredValidator Component="Apellido" Text="Apellido is required" Style="position: absolute">
                            </RadzenRequiredValidator>
                        </div>
                    </div>
                    <div style="margin-bottom: 1rem" class="row">
                        <div class="col-md-3">
                            <RadzenLabel Text=@MultilenguajeController.ObtenerTextoPorClave("DOCUMENTO",dataLenguaje) Component="Documento" style="width: 100%">
                            </RadzenLabel>
                        </div>
                        <div class="col-md-9">
                            <RadzenTextBox style="display: block" @bind-Value="@(Usuario_entity.Documento)" Name="Documento" Disabled="true">
                            </RadzenTextBox>
                            <RadzenRequiredValidator Component="Documento" Text="Documento is required" Style="position: absolute">
                            </RadzenRequiredValidator>
                        </div>
                    </div>
                    <div style="margin-bottom: 1rem" class="row">
                        <div class="col-md-3">
                            <RadzenLabel Text=@MultilenguajeController.ObtenerTextoPorClave("LEGAJO",dataLenguaje) Component="Legajo" style="width: 100%">
                            </RadzenLabel>
                        </div>
                        <div class="col-md-9">
                            <RadzenTextBox style="display: block" @bind-Value="@(Usuario_entity.Legajo)" Name="Legajo" Disabled="true">
                            </RadzenTextBox>
                            <RadzenRequiredValidator Component="Legajo" Text="Legajo is required" Style="position: absolute">
                            </RadzenRequiredValidator>
                        </div>
                    </div>
                    <div style="margin-bottom: 1rem" class="row">
                        <div class="col-md-3">
                            <RadzenLabel Text=@MultilenguajeController.ObtenerTextoPorClave("MAIL",dataLenguaje) Component="Mail" style="width: 100%">
                            </RadzenLabel>
                        </div>
                        <div class="col-md-9">
                            <RadzenTextBox style="display: block" @bind-Value="@(Usuario_entity.Mail)" Name="Mail">
                            </RadzenTextBox>
                            <RadzenRequiredValidator Component="Mail" Text="Mail is required" Style="position: absolute">
                            </RadzenRequiredValidator>
                            <RadzenEmailValidator Component="Mail" Style="position: absolute"></RadzenEmailValidator>
                        </div>
                    </div>
                    <div style="margin-bottom: 1rem" class="row">
                        <div class="col-md-3">
                            <RadzenLabel Text=@MultilenguajeController.ObtenerTextoPorClave("FECHAINGRESO",dataLenguaje) Component="FechaIngreso" style="width: 100%">
                            </RadzenLabel>
                        </div>
                        <div class="col-md-9">
                            <RadzenDatePicker ShowTime="true" ShowSeconds="true" style="width: 25%" @bind-Value="@(Usuario_entity.FechaIngreso)" Name="FechaIngreso" Disabled="true">
                            </RadzenDatePicker>
                        </div>
                    </div>
                    <div style="margin-bottom: 1rem" class="row">
                        <div class="col-md-3">
                            <RadzenLabel Text=@MultilenguajeController.ObtenerTextoPorClave("NICKNAME",dataLenguaje) Component="NickName" style="width: 100%">
                            </RadzenLabel>
                        </div>
                        <div class="col-md-9">
                            <RadzenTextBox style="display: block" @bind-Value="@(Usuario_entity.NickName)" Name="NickName" Disabled="true">
                            </RadzenTextBox>
                        </div>
                    </div>
                    <div style="margin-bottom: 1rem" class="row">
                        <div class="col-md-3">
                            <RadzenLabel Text=@MultilenguajeController.ObtenerTextoPorClave("AVATAR",dataLenguaje) Component="Avatar" Style="margin-left: 0px; vertical-align: middle;" />
                        </div>
                        <div class="col-md-9">
                            <RadzenFileInput Name="Avatar" @bind-Value="@Usuario_entity.Avatar" Error="@ErrorFileInput_Avatar" TValue="string" Class="w-100" />
                            <RadzenRequiredValidator Component="Avatar" Text="Avatar is required" Style="position : inherit ">
                            </RadzenRequiredValidator>
                        </div>
                    </div>
                    <div style="margin-bottom: 1rem" class="row">
                        <div class="col-md-3">
                            <RadzenLabel Text=@MultilenguajeController.ObtenerTextoPorClave("FECHAULTIMOLOGIN",dataLenguaje) Component="FechaUltimoLogin" style="width: 100%">
                            </RadzenLabel>
                        </div>
                        <div class="col-md-9">
                            <RadzenDatePicker ShowTime="true" ShowSeconds="true" style="width: 25%" @bind-Value="@(Usuario_entity.FechaUltimoLogin)" Name="FechaUltimoLogin" Disabled="true">
                            </RadzenDatePicker>
                        </div>
                    </div>
                    <div style="margin-bottom: 1rem" class="row">
                        <div class="col-md-3">
                            <RadzenLabel Text=@MultilenguajeController.ObtenerTextoPorClave("FECHAEXPIRACION",dataLenguaje) Component="FechaExpiracion" style="width: 100%">
                            </RadzenLabel>
                        </div>
                        <div class="col-md-9">
                            <RadzenDatePicker ShowTime="true" AllowClear="true" ShowSeconds="true" style="width: 25%" @bind-Value="@(Usuario_entity.FechaExpiracion)" Name="FechaExpiracion" Disabled="true">
                            </RadzenDatePicker>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col offset-sm-3">
                            <RadzenButton ButtonType="ButtonType.Submit" Icon="save" Text=@MultilenguajeController.ObtenerTextoPorClave("BOTON_ACEPTAR",dataLenguaje) ButtonStyle="ButtonStyle.Primary">
                            </RadzenButton>
                            <RadzenButton ButtonStyle="ButtonStyle.Secondary" Icon="save" style="margin-left: 1rem" Text=@MultilenguajeController.ObtenerTextoPorClave("BOTON_CANCELAR",dataLenguaje) Click="Cancel">
                            </RadzenButton>
                        </div>
                    </div>
                </ChildContent>
            </RadzenTemplateForm>
        }
    </ChildContent>
</RadzenContent>

@code {
    /// <summary>
    /// Variables to store multilanguaje
    /// </summary>
    private List<Entities.TextoLenguaje> dataLenguaje;

    private bool estaCargando { get; set; }

    /// <summary>
    /// Variables to store permissions
    /// </summary>
    private List<SeguridadEntities.FuncionRol> dataFunciones;

    /// <summary>
    ///  Variable to store the user id
    /// </summary>
    private Depositary.Entities.Tables.Seguridad.Usuario? dataUsuario = null;

    /// <summary>
    /// Variables to handle main entity
    /// </summary>
    private Depositary.Entities.Tables.Seguridad.Usuario? Usuario_entity = new();
    private List<Depositary.Entities.Tables.Seguridad.Usuario> Usuario_entities = null;
    private List<Depositary.Entities.Tables.Regionalizacion.Lenguaje>? Lenguaje_LenguajeId_entities;
    private List<Depositary.Entities.Tables.Directorio.Empresa>? Empresa_EmpresaId_entities;


    protected override async Task OnInitializedAsync()
    {
        estaCargando = true;
        dataLenguaje = await sessionStorage.GetItemAsync<List<Entities.TextoLenguaje>>("DataLenguaje");
        dataFunciones = await sessionStorage.GetItemAsync<List<SeguridadEntities.FuncionRol>>("DataFunciones");
        dataUsuario = await sessionStorage.GetItemAsync<Depositary.Entities.Tables.Seguridad.Usuario?>("DataUsuario");
        if (dataUsuario == null)
            NavManager.NavigateTo("login", true);
        await Task.Run(LoadMainEntityData);
        estaCargando = false;
        StateHasChanged();
    }

    private void LoadMainEntityData()
    {
        Depositary.Business.Tables.Seguridad.Usuario entity = new();
        entity.Where.Add(Depositary.Business.Tables.Seguridad.Usuario.ColumnEnum.Id, Depositary.sqlEnum.OperandEnum.Equal, dataUsuario.Id);
        entity.Items();

        if (entity.Result.Count > 0)
        {
            Usuario_entity = entity.Result.FirstOrDefault();

            Depositary.Business.Tables.Regionalizacion.Lenguaje Lenguaje_LenguajeId_local = new();
            Lenguaje_LenguajeId_entities = Lenguaje_LenguajeId_local.Items();

            Depositary.Business.Tables.Directorio.Empresa Empresa_EmpresaId_local = new();
            Empresa_EmpresaId_entities = Empresa_EmpresaId_local.Items();
        }

    }

    private async void Save()
    {
        estaCargando = true;
        StateHasChanged();
        string actionInformation = string.Empty;
        NotificationSeverity severityType = NotificationSeverity.Error;
        string summary = string.Empty;
        Depositary.Business.Tables.Seguridad.Usuario crud = new();
        try
        {
            crud.Update(Usuario_entity);
            summary = "El registro se ha ";
            actionInformation = "modificado.";
            severityType = NotificationSeverity.Success;

            //Recargamos los datos de usuario y los guardamos en el session storage.
            await sessionStorage.RemoveItemAsync("DataUsuario");
            await sessionStorage.SetItemAsync("DataUsuario", Usuario_entity);

            //Si se modifico el lenguaje recargamos los datos y los guardamos en el session storage
            if (Usuario_entity.LenguajeId != dataUsuario.LenguajeId)
            {
                await sessionStorage.RemoveItemAsync("DataLenguaje");
                dataLenguaje = MultilenguajeController.ObtenerTextosLenguaje(dataUsuario.Id);
                await sessionStorage.SetItemAsync("DataLenguaje", dataLenguaje);
                dataLenguaje = await sessionStorage.GetItemAsync<List<Entities.TextoLenguaje>>("DataLenguaje");
            }
        }
        catch (Exception ex)
        {
            summary = "Error al procesar.";
            actionInformation = ex.Message;
            severityType = NotificationSeverity.Error;
            estaCargando = false;
            StateHasChanged();
        }

        NavManager.NavigateTo("Dashboard", true);
    }

    /// <summary>
    /// Crud mode cancellation and default mode
    /// </summary>
    private void Cancel()
    {
        NavManager.NavigateTo("Dashboard", true);
    }

    #region Notificacions

    private void ShowNotification(NotificationMessage message)
    {
        NotificationService.Notify(message);
    }

    #endregion

    #region Events

    /// <summary>
    /// Usuario_entity.Avatar input error
    /// </summary>
    /// <param name="args"></param>
    private void ErrorFileInput_Avatar(UploadErrorEventArgs args)
    {
        ShowNotification(new NotificationMessage
            {
                Severity = NotificationSeverity.Error,
                Summary = "Error al procesar archivo.",
                Detail = args.Message,
                Duration = 4000
            });
    }

    #endregion

}